{"id":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"./flex-spec","loc":{"line":6,"column":21},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/flex-shrink.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/flex-spec.js"},{"name":"../declaration","loc":{"line":8,"column":24},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/flex-shrink.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/declaration.js"}],"generated":{"js":"(function() {\n  var Declaration, FlexShrink, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  FlexShrink = (function(superClass) {\n    extend(FlexShrink, superClass);\n\n    function FlexShrink() {\n      return FlexShrink.__super__.constructor.apply(this, arguments);\n    }\n\n    FlexShrink.names = ['flex-shrink', 'flex-negative'];\n\n    FlexShrink.prototype.normalize = function() {\n      return 'flex-shrink';\n    };\n\n    FlexShrink.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012) {\n        return prefix + 'flex-negative';\n      } else {\n        return FlexShrink.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    FlexShrink.prototype.set = function(decl, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012 || spec === 'final') {\n        return FlexShrink.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return FlexShrink;\n\n  })(Declaration);\n\n  module.exports = FlexShrink;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/flex-shrink.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/hacks/flex-shrink.js":"(function() {\n  var Declaration, FlexShrink, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  FlexShrink = (function(superClass) {\n    extend(FlexShrink, superClass);\n\n    function FlexShrink() {\n      return FlexShrink.__super__.constructor.apply(this, arguments);\n    }\n\n    FlexShrink.names = ['flex-shrink', 'flex-negative'];\n\n    FlexShrink.prototype.normalize = function() {\n      return 'flex-shrink';\n    };\n\n    FlexShrink.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012) {\n        return prefix + 'flex-negative';\n      } else {\n        return FlexShrink.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    FlexShrink.prototype.set = function(decl, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012 || spec === 'final') {\n        return FlexShrink.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return FlexShrink;\n\n  })(Declaration);\n\n  module.exports = FlexShrink;\n\n}).call(this);\n"},"lineCount":48}},"hash":"866e9fe34730d202a778d03c5bb264b3","cacheData":{"env":{}}}