{"id":"../node_modules/autoprefixer/lib/hacks/grid-template.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"postcss-value-parser","loc":{"line":6,"column":19},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/grid-template.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/postcss-value-parser/lib/index.js"},{"name":"../declaration","loc":{"line":8,"column":24},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/grid-template.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/declaration.js"}],"generated":{"js":"(function() {\n  var Declaration, GridTemplate, parser,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  parser = require('postcss-value-parser');\n\n  Declaration = require('../declaration');\n\n  GridTemplate = (function(superClass) {\n    extend(GridTemplate, superClass);\n\n    function GridTemplate() {\n      return GridTemplate.__super__.constructor.apply(this, arguments);\n    }\n\n    GridTemplate.names = ['grid-template-rows', 'grid-template-columns', 'grid-rows', 'grid-columns'];\n\n    GridTemplate.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-ms-') {\n        return prefix + prop.replace('template-', '');\n      } else {\n        return GridTemplate.__super__.prefixed.call(this, prop, prefix);\n      }\n    };\n\n    GridTemplate.prototype.normalize = function(prop) {\n      return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1');\n    };\n\n    GridTemplate.prototype.walkRepeat = function(node) {\n      var count, first, fixed, i, j, len, ref;\n      fixed = [];\n      ref = node.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        i = ref[j];\n        if (i.nodes) {\n          this.walkRepeat(i);\n        }\n        fixed.push(i);\n        if (i.type === 'function' && i.value === 'repeat') {\n          first = i.nodes.shift();\n          if (first) {\n            count = first.value;\n            i.nodes.shift();\n            i.value = '';\n            fixed.push({\n              type: 'word',\n              value: \"[\" + count + \"]\"\n            });\n          }\n        }\n      }\n      return node.nodes = fixed;\n    };\n\n    GridTemplate.prototype.changeRepeat = function(value) {\n      var ast;\n      ast = parser(value);\n      this.walkRepeat(ast);\n      return ast.toString();\n    };\n\n    GridTemplate.prototype.set = function(decl, prefix) {\n      if (prefix === '-ms-' && decl.value.indexOf('repeat(') !== -1) {\n        decl.value = this.changeRepeat(decl.value);\n      }\n      return GridTemplate.__super__.set.call(this, decl, prefix);\n    };\n\n    return GridTemplate;\n\n  })(Declaration);\n\n  module.exports = GridTemplate;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/grid-template.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/hacks/grid-template.js":"(function() {\n  var Declaration, GridTemplate, parser,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  parser = require('postcss-value-parser');\n\n  Declaration = require('../declaration');\n\n  GridTemplate = (function(superClass) {\n    extend(GridTemplate, superClass);\n\n    function GridTemplate() {\n      return GridTemplate.__super__.constructor.apply(this, arguments);\n    }\n\n    GridTemplate.names = ['grid-template-rows', 'grid-template-columns', 'grid-rows', 'grid-columns'];\n\n    GridTemplate.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-ms-') {\n        return prefix + prop.replace('template-', '');\n      } else {\n        return GridTemplate.__super__.prefixed.call(this, prop, prefix);\n      }\n    };\n\n    GridTemplate.prototype.normalize = function(prop) {\n      return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1');\n    };\n\n    GridTemplate.prototype.walkRepeat = function(node) {\n      var count, first, fixed, i, j, len, ref;\n      fixed = [];\n      ref = node.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        i = ref[j];\n        if (i.nodes) {\n          this.walkRepeat(i);\n        }\n        fixed.push(i);\n        if (i.type === 'function' && i.value === 'repeat') {\n          first = i.nodes.shift();\n          if (first) {\n            count = first.value;\n            i.nodes.shift();\n            i.value = '';\n            fixed.push({\n              type: 'word',\n              value: \"[\" + count + \"]\"\n            });\n          }\n        }\n      }\n      return node.nodes = fixed;\n    };\n\n    GridTemplate.prototype.changeRepeat = function(value) {\n      var ast;\n      ast = parser(value);\n      this.walkRepeat(ast);\n      return ast.toString();\n    };\n\n    GridTemplate.prototype.set = function(decl, prefix) {\n      if (prefix === '-ms-' && decl.value.indexOf('repeat(') !== -1) {\n        decl.value = this.changeRepeat(decl.value);\n      }\n      return GridTemplate.__super__.set.call(this, decl, prefix);\n    };\n\n    return GridTemplate;\n\n  })(Declaration);\n\n  module.exports = GridTemplate;\n\n}).call(this);\n"},"lineCount":78}},"hash":"f7acf432ed5c6ccbeee80153f15db91b","cacheData":{"env":{}}}