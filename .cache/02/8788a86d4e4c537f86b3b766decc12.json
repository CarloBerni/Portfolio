{"id":"../node_modules/autoprefixer/lib/prefixer.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"./browsers","loc":{"line":5,"column":21},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/prefixer.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/browsers.js"},{"name":"./utils","loc":{"line":7,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/prefixer.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/utils.js"},{"name":"postcss/lib/vendor","loc":{"line":9,"column":19},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/prefixer.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/node_modules/postcss/lib/vendor.js"}],"generated":{"js":"(function() {\n  var Browsers, Prefixer, clone, utils, vendor,\n    hasProp = {}.hasOwnProperty;\n\n  Browsers = require('./browsers');\n\n  utils = require('./utils');\n\n  vendor = require('postcss/lib/vendor');\n\n  clone = function(obj, parent) {\n    var cloned, i, value;\n    cloned = new obj.constructor();\n    for (i in obj) {\n      if (!hasProp.call(obj, i)) continue;\n      value = obj[i];\n      if (i === 'parent' && typeof value === 'object') {\n        if (parent) {\n          cloned[i] = parent;\n        }\n      } else if (i === 'source') {\n        cloned[i] = value;\n      } else if (i === null) {\n        cloned[i] = value;\n      } else if (value instanceof Array) {\n        cloned[i] = value.map(function(i) {\n          return clone(i, cloned);\n        });\n      } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues') {\n        if (typeof value === 'object' && value !== null) {\n          value = clone(value, cloned);\n        }\n        cloned[i] = value;\n      }\n    }\n    return cloned;\n  };\n\n  Prefixer = (function() {\n    Prefixer.hack = function(klass) {\n      var j, len, name, ref, results;\n      this.hacks || (this.hacks = {});\n      ref = klass.names;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        name = ref[j];\n        results.push(this.hacks[name] = klass);\n      }\n      return results;\n    };\n\n    Prefixer.load = function(name, prefixes, all) {\n      var klass, ref;\n      klass = (ref = this.hacks) != null ? ref[name] : void 0;\n      if (klass) {\n        return new klass(name, prefixes, all);\n      } else {\n        return new this(name, prefixes, all);\n      }\n    };\n\n    Prefixer.clone = function(node, overrides) {\n      var cloned, name;\n      cloned = clone(node);\n      for (name in overrides) {\n        cloned[name] = overrides[name];\n      }\n      return cloned;\n    };\n\n    function Prefixer(name1, prefixes1, all1) {\n      this.name = name1;\n      this.prefixes = prefixes1;\n      this.all = all1;\n    }\n\n    Prefixer.prototype.parentPrefix = function(node) {\n      var prefix;\n      prefix = node._autoprefixerPrefix != null ? node._autoprefixerPrefix : node.type === 'decl' && node.prop[0] === '-' ? vendor.prefix(node.prop) : node.type === 'root' ? false : node.type === 'rule' && node.selector.indexOf(':-') !== -1 && /:(-\\w+-)/.test(node.selector) ? node.selector.match(/:(-\\w+-)/)[1] : node.type === 'atrule' && node.name[0] === '-' ? vendor.prefix(node.name) : this.parentPrefix(node.parent);\n      if (Browsers.prefixes().indexOf(prefix) === -1) {\n        prefix = false;\n      }\n      return node._autoprefixerPrefix = prefix;\n    };\n\n    Prefixer.prototype.process = function(node) {\n      var added, j, k, len, len1, parent, prefix, prefixes, ref;\n      if (!this.check(node)) {\n        return;\n      }\n      parent = this.parentPrefix(node);\n      prefixes = [];\n      ref = this.prefixes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        prefix = ref[j];\n        if (parent && parent !== utils.removeNote(prefix)) {\n          continue;\n        }\n        prefixes.push(prefix);\n      }\n      added = [];\n      for (k = 0, len1 = prefixes.length; k < len1; k++) {\n        prefix = prefixes[k];\n        if (this.add(node, prefix, added.concat([prefix]))) {\n          added.push(prefix);\n        }\n      }\n      return added;\n    };\n\n    Prefixer.prototype.clone = function(node, overrides) {\n      return Prefixer.clone(node, overrides);\n    };\n\n    return Prefixer;\n\n  })();\n\n  module.exports = Prefixer;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/autoprefixer/lib/prefixer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/prefixer.js":"(function() {\n  var Browsers, Prefixer, clone, utils, vendor,\n    hasProp = {}.hasOwnProperty;\n\n  Browsers = require('./browsers');\n\n  utils = require('./utils');\n\n  vendor = require('postcss/lib/vendor');\n\n  clone = function(obj, parent) {\n    var cloned, i, value;\n    cloned = new obj.constructor();\n    for (i in obj) {\n      if (!hasProp.call(obj, i)) continue;\n      value = obj[i];\n      if (i === 'parent' && typeof value === 'object') {\n        if (parent) {\n          cloned[i] = parent;\n        }\n      } else if (i === 'source') {\n        cloned[i] = value;\n      } else if (i === null) {\n        cloned[i] = value;\n      } else if (value instanceof Array) {\n        cloned[i] = value.map(function(i) {\n          return clone(i, cloned);\n        });\n      } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues') {\n        if (typeof value === 'object' && value !== null) {\n          value = clone(value, cloned);\n        }\n        cloned[i] = value;\n      }\n    }\n    return cloned;\n  };\n\n  Prefixer = (function() {\n    Prefixer.hack = function(klass) {\n      var j, len, name, ref, results;\n      this.hacks || (this.hacks = {});\n      ref = klass.names;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        name = ref[j];\n        results.push(this.hacks[name] = klass);\n      }\n      return results;\n    };\n\n    Prefixer.load = function(name, prefixes, all) {\n      var klass, ref;\n      klass = (ref = this.hacks) != null ? ref[name] : void 0;\n      if (klass) {\n        return new klass(name, prefixes, all);\n      } else {\n        return new this(name, prefixes, all);\n      }\n    };\n\n    Prefixer.clone = function(node, overrides) {\n      var cloned, name;\n      cloned = clone(node);\n      for (name in overrides) {\n        cloned[name] = overrides[name];\n      }\n      return cloned;\n    };\n\n    function Prefixer(name1, prefixes1, all1) {\n      this.name = name1;\n      this.prefixes = prefixes1;\n      this.all = all1;\n    }\n\n    Prefixer.prototype.parentPrefix = function(node) {\n      var prefix;\n      prefix = node._autoprefixerPrefix != null ? node._autoprefixerPrefix : node.type === 'decl' && node.prop[0] === '-' ? vendor.prefix(node.prop) : node.type === 'root' ? false : node.type === 'rule' && node.selector.indexOf(':-') !== -1 && /:(-\\w+-)/.test(node.selector) ? node.selector.match(/:(-\\w+-)/)[1] : node.type === 'atrule' && node.name[0] === '-' ? vendor.prefix(node.name) : this.parentPrefix(node.parent);\n      if (Browsers.prefixes().indexOf(prefix) === -1) {\n        prefix = false;\n      }\n      return node._autoprefixerPrefix = prefix;\n    };\n\n    Prefixer.prototype.process = function(node) {\n      var added, j, k, len, len1, parent, prefix, prefixes, ref;\n      if (!this.check(node)) {\n        return;\n      }\n      parent = this.parentPrefix(node);\n      prefixes = [];\n      ref = this.prefixes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        prefix = ref[j];\n        if (parent && parent !== utils.removeNote(prefix)) {\n          continue;\n        }\n        prefixes.push(prefix);\n      }\n      added = [];\n      for (k = 0, len1 = prefixes.length; k < len1; k++) {\n        prefix = prefixes[k];\n        if (this.add(node, prefix, added.concat([prefix]))) {\n          added.push(prefix);\n        }\n      }\n      return added;\n    };\n\n    Prefixer.prototype.clone = function(node, overrides) {\n      return Prefixer.clone(node, overrides);\n    };\n\n    return Prefixer;\n\n  })();\n\n  module.exports = Prefixer;\n\n}).call(this);\n"},"lineCount":122}},"hash":"d396a7c86d7ee764673679c8e4391a7c","cacheData":{"env":{}}}