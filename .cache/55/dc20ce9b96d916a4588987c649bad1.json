{"id":"../node_modules/autoprefixer/lib/hacks/gradient.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"../old-value","loc":{"line":7,"column":21},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/old-value.js"},{"name":"../value","loc":{"line":9,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/value.js"},{"name":"../utils","loc":{"line":11,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/utils.js"},{"name":"postcss-value-parser","loc":{"line":13,"column":19},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/postcss-value-parser/lib/index.js"},{"name":"normalize-range","loc":{"line":15,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/normalize-range/index.js"},{"name":"postcss/lib/list","loc":{"line":17,"column":17},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/gradient.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/node_modules/postcss/lib/list.js"}],"generated":{"js":"(function() {\n  var Gradient, OldValue, Value, isDirection, list, parser, range, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  utils = require('../utils');\n\n  parser = require('postcss-value-parser');\n\n  range = require('normalize-range');\n\n  list = require('postcss/lib/list');\n\n  isDirection = /top|left|right|bottom/gi;\n\n  Gradient = (function(superClass) {\n    extend(Gradient, superClass);\n\n    function Gradient() {\n      return Gradient.__super__.constructor.apply(this, arguments);\n    }\n\n    Gradient.names = ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient'];\n\n    Gradient.prototype.replace = function(string, prefix) {\n      var ast, changes, j, len, node, ref;\n      ast = parser(string);\n      ref = ast.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        node = ref[j];\n        if (node.type === 'function' && node.value === this.name) {\n          node.nodes = this.newDirection(node.nodes);\n          node.nodes = this.normalize(node.nodes);\n          if (prefix === '-webkit- old') {\n            changes = this.oldWebkit(node);\n            if (!changes) {\n              return;\n            }\n          } else {\n            node.nodes = this.convertDirection(node.nodes);\n            node.value = prefix + node.value;\n          }\n        }\n      }\n      return ast.toString();\n    };\n\n    Gradient.prototype.directions = {\n      top: 'bottom',\n      left: 'right',\n      bottom: 'top',\n      right: 'left'\n    };\n\n    Gradient.prototype.oldDirections = {\n      'top': 'left bottom, left top',\n      'left': 'right top, left top',\n      'bottom': 'left top, left bottom',\n      'right': 'left top, right top',\n      'top right': 'left bottom, right top',\n      'top left': 'right bottom, left top',\n      'right top': 'left bottom, right top',\n      'right bottom': 'left top, right bottom',\n      'bottom right': 'left top, right bottom',\n      'bottom left': 'right top, left bottom',\n      'left top': 'right bottom, left top',\n      'left bottom': 'right top, left bottom'\n    };\n\n    Gradient.prototype.replaceFirst = function() {\n      var params, prefix, words;\n      params = arguments[0], words = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      prefix = words.map(function(i) {\n        if (i === ' ') {\n          return {\n            type: 'space',\n            value: i\n          };\n        } else {\n          return {\n            type: 'word',\n            value: i\n          };\n        }\n      });\n      return prefix.concat(params.slice(1));\n    };\n\n    Gradient.prototype.normalizeUnit = function(str, full) {\n      var deg, num;\n      num = parseFloat(str);\n      deg = (num / full) * 360;\n      return deg + \"deg\";\n    };\n\n    Gradient.prototype.normalize = function(nodes) {\n      var num;\n      if (!nodes[0]) {\n        return nodes;\n      }\n      if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 400);\n      } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);\n      } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 1);\n      } else if (nodes[0].value.indexOf('deg') !== -1) {\n        num = parseFloat(nodes[0].value);\n        num = range.wrap(0, 360, num);\n        nodes[0].value = num + \"deg\";\n      }\n      if (nodes[0].value === '0deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'top');\n      } else if (nodes[0].value === '90deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'right');\n      } else if (nodes[0].value === '180deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom');\n      } else if (nodes[0].value === '270deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'left');\n      }\n      return nodes;\n    };\n\n    Gradient.prototype.newDirection = function(params) {\n      var i, j, ref;\n      if (params[0].value === 'to') {\n        return params;\n      }\n      if (!isDirection.test(params[0].value)) {\n        return params;\n      }\n      params.unshift({\n        type: 'word',\n        value: 'to'\n      }, {\n        type: 'space',\n        value: ' '\n      });\n      for (i = j = 2, ref = params.length; 2 <= ref ? j < ref : j > ref; i = 2 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        }\n        if (params[i].type === 'word') {\n          params[i].value = this.revertDirection(params[i].value);\n        }\n      }\n      return params;\n    };\n\n    Gradient.prototype.convertDirection = function(params) {\n      if (params.length > 0) {\n        if (params[0].value === 'to') {\n          this.fixDirection(params);\n        } else if (params[0].value.indexOf('deg') !== -1) {\n          this.fixAngle(params);\n        } else if (params[2].value === 'at') {\n          this.fixRadial(params);\n        }\n      }\n      return params;\n    };\n\n    Gradient.prototype.fixDirection = function(params) {\n      var i, j, ref, results;\n      params.splice(0, 2);\n      results = [];\n      for (i = j = 0, ref = params.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        }\n        if (params[i].type === 'word') {\n          results.push(params[i].value = this.revertDirection(params[i].value));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    Gradient.prototype.fixAngle = function(params) {\n      var first;\n      first = params[0].value;\n      first = parseFloat(first);\n      first = Math.abs(450 - first) % 360;\n      first = this.roundFloat(first, 3);\n      return params[0].value = first + \"deg\";\n    };\n\n    Gradient.prototype.fixRadial = function(params) {\n      var first, i, j, ref, second;\n      first = params[0];\n      second = [];\n      for (i = j = 4, ref = params.length; 4 <= ref ? j < ref : j > ref; i = 4 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        } else {\n          second.push(params[i]);\n        }\n      }\n      return params.splice.apply(params, [0, i].concat(slice.call(second), [params[i + 2]], [first]));\n    };\n\n    Gradient.prototype.revertDirection = function(word) {\n      return this.directions[word.toLowerCase()] || word;\n    };\n\n    Gradient.prototype.roundFloat = function(float, digits) {\n      return parseFloat(float.toFixed(digits));\n    };\n\n    Gradient.prototype.oldWebkit = function(node) {\n      var i, j, k, len, len1, nodes, param, params, string;\n      nodes = node.nodes;\n      string = parser.stringify(node.nodes);\n      if (this.name !== 'linear-gradient') {\n        return false;\n      }\n      if (nodes[0] && nodes[0].value.indexOf('deg') !== -1) {\n        return false;\n      }\n      if (string.indexOf('px') !== -1) {\n        return false;\n      }\n      if (string.indexOf('-corner') !== -1) {\n        return false;\n      }\n      if (string.indexOf('-side') !== -1) {\n        return false;\n      }\n      params = [[]];\n      for (j = 0, len = nodes.length; j < len; j++) {\n        i = nodes[j];\n        params[params.length - 1].push(i);\n        if (i.type === 'div' && i.value === ',') {\n          params.push([]);\n        }\n      }\n      this.oldDirection(params);\n      this.colorStops(params);\n      node.nodes = [];\n      for (k = 0, len1 = params.length; k < len1; k++) {\n        param = params[k];\n        node.nodes = node.nodes.concat(param);\n      }\n      node.nodes.unshift({\n        type: 'word',\n        value: 'linear'\n      }, this.cloneDiv(node.nodes));\n      node.value = '-webkit-gradient';\n      return true;\n    };\n\n    Gradient.prototype.oldDirection = function(params) {\n      var div, j, len, node, old, ref, words;\n      div = this.cloneDiv(params[0]);\n      if (params[0][0].value !== 'to') {\n        return params.unshift([\n          {\n            type: 'word',\n            value: this.oldDirections.bottom\n          }, div\n        ]);\n      } else {\n        words = [];\n        ref = params[0].slice(2);\n        for (j = 0, len = ref.length; j < len; j++) {\n          node = ref[j];\n          if (node.type === 'word') {\n            words.push(node.value.toLowerCase());\n          }\n        }\n        words = words.join(' ');\n        old = this.oldDirections[words] || words;\n        return params[0] = [\n          {\n            type: 'word',\n            value: old\n          }, div\n        ];\n      }\n    };\n\n    Gradient.prototype.cloneDiv = function(params) {\n      var i, j, len;\n      for (j = 0, len = params.length; j < len; j++) {\n        i = params[j];\n        if (i.type === 'div' && i.value === ',') {\n          return i;\n        }\n      }\n      return {\n        type: 'div',\n        value: ',',\n        after: ' '\n      };\n    };\n\n    Gradient.prototype.colorStops = function(params) {\n      var color, div, i, j, len, param, pos, results, stop;\n      results = [];\n      for (i = j = 0, len = params.length; j < len; i = ++j) {\n        param = params[i];\n        if (i === 0) {\n          continue;\n        }\n        color = parser.stringify(param[0]);\n        if (param[1] && param[1].type === 'word') {\n          pos = param[1].value;\n        } else if (param[2] && param[2].type === 'word') {\n          pos = param[2].value;\n        }\n        stop = i === 1 && (!pos || pos === '0%') ? \"from(\" + color + \")\" : i === params.length - 1 && (!pos || pos === '100%') ? \"to(\" + color + \")\" : pos ? \"color-stop(\" + pos + \", \" + color + \")\" : \"color-stop(\" + color + \")\";\n        div = param[param.length - 1];\n        params[i] = [\n          {\n            type: 'word',\n            value: stop\n          }\n        ];\n        if (div.type === 'div' && div.value === ',') {\n          results.push(params[i].push(div));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    Gradient.prototype.old = function(prefix) {\n      var regexp, string, type;\n      if (prefix === '-webkit-') {\n        type = this.name === 'linear-gradient' ? 'linear' : 'radial';\n        string = '-gradient';\n        regexp = utils.regexp(\"-webkit-(\" + type + \"-gradient|gradient\\\\(\\\\s*\" + type + \")\", false);\n        return new OldValue(this.name, prefix + this.name, string, regexp);\n      } else {\n        return Gradient.__super__.old.apply(this, arguments);\n      }\n    };\n\n    Gradient.prototype.add = function(decl, prefix) {\n      var p;\n      p = decl.prop;\n      if (p.indexOf('mask') !== -1) {\n        if (prefix === '-webkit-' || prefix === '-webkit- old') {\n          return Gradient.__super__.add.apply(this, arguments);\n        }\n      } else if (p === 'list-style' || p === 'list-style-image' || p === 'content') {\n        if (prefix === '-webkit-' || prefix === '-webkit- old') {\n          return Gradient.__super__.add.apply(this, arguments);\n        }\n      } else {\n        return Gradient.__super__.add.apply(this, arguments);\n      }\n    };\n\n    return Gradient;\n\n  })(Value);\n\n  module.exports = Gradient;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/gradient.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/hacks/gradient.js":"(function() {\n  var Gradient, OldValue, Value, isDirection, list, parser, range, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  utils = require('../utils');\n\n  parser = require('postcss-value-parser');\n\n  range = require('normalize-range');\n\n  list = require('postcss/lib/list');\n\n  isDirection = /top|left|right|bottom/gi;\n\n  Gradient = (function(superClass) {\n    extend(Gradient, superClass);\n\n    function Gradient() {\n      return Gradient.__super__.constructor.apply(this, arguments);\n    }\n\n    Gradient.names = ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient'];\n\n    Gradient.prototype.replace = function(string, prefix) {\n      var ast, changes, j, len, node, ref;\n      ast = parser(string);\n      ref = ast.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        node = ref[j];\n        if (node.type === 'function' && node.value === this.name) {\n          node.nodes = this.newDirection(node.nodes);\n          node.nodes = this.normalize(node.nodes);\n          if (prefix === '-webkit- old') {\n            changes = this.oldWebkit(node);\n            if (!changes) {\n              return;\n            }\n          } else {\n            node.nodes = this.convertDirection(node.nodes);\n            node.value = prefix + node.value;\n          }\n        }\n      }\n      return ast.toString();\n    };\n\n    Gradient.prototype.directions = {\n      top: 'bottom',\n      left: 'right',\n      bottom: 'top',\n      right: 'left'\n    };\n\n    Gradient.prototype.oldDirections = {\n      'top': 'left bottom, left top',\n      'left': 'right top, left top',\n      'bottom': 'left top, left bottom',\n      'right': 'left top, right top',\n      'top right': 'left bottom, right top',\n      'top left': 'right bottom, left top',\n      'right top': 'left bottom, right top',\n      'right bottom': 'left top, right bottom',\n      'bottom right': 'left top, right bottom',\n      'bottom left': 'right top, left bottom',\n      'left top': 'right bottom, left top',\n      'left bottom': 'right top, left bottom'\n    };\n\n    Gradient.prototype.replaceFirst = function() {\n      var params, prefix, words;\n      params = arguments[0], words = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      prefix = words.map(function(i) {\n        if (i === ' ') {\n          return {\n            type: 'space',\n            value: i\n          };\n        } else {\n          return {\n            type: 'word',\n            value: i\n          };\n        }\n      });\n      return prefix.concat(params.slice(1));\n    };\n\n    Gradient.prototype.normalizeUnit = function(str, full) {\n      var deg, num;\n      num = parseFloat(str);\n      deg = (num / full) * 360;\n      return deg + \"deg\";\n    };\n\n    Gradient.prototype.normalize = function(nodes) {\n      var num;\n      if (!nodes[0]) {\n        return nodes;\n      }\n      if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 400);\n      } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);\n      } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 1);\n      } else if (nodes[0].value.indexOf('deg') !== -1) {\n        num = parseFloat(nodes[0].value);\n        num = range.wrap(0, 360, num);\n        nodes[0].value = num + \"deg\";\n      }\n      if (nodes[0].value === '0deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'top');\n      } else if (nodes[0].value === '90deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'right');\n      } else if (nodes[0].value === '180deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom');\n      } else if (nodes[0].value === '270deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'left');\n      }\n      return nodes;\n    };\n\n    Gradient.prototype.newDirection = function(params) {\n      var i, j, ref;\n      if (params[0].value === 'to') {\n        return params;\n      }\n      if (!isDirection.test(params[0].value)) {\n        return params;\n      }\n      params.unshift({\n        type: 'word',\n        value: 'to'\n      }, {\n        type: 'space',\n        value: ' '\n      });\n      for (i = j = 2, ref = params.length; 2 <= ref ? j < ref : j > ref; i = 2 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        }\n        if (params[i].type === 'word') {\n          params[i].value = this.revertDirection(params[i].value);\n        }\n      }\n      return params;\n    };\n\n    Gradient.prototype.convertDirection = function(params) {\n      if (params.length > 0) {\n        if (params[0].value === 'to') {\n          this.fixDirection(params);\n        } else if (params[0].value.indexOf('deg') !== -1) {\n          this.fixAngle(params);\n        } else if (params[2].value === 'at') {\n          this.fixRadial(params);\n        }\n      }\n      return params;\n    };\n\n    Gradient.prototype.fixDirection = function(params) {\n      var i, j, ref, results;\n      params.splice(0, 2);\n      results = [];\n      for (i = j = 0, ref = params.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        }\n        if (params[i].type === 'word') {\n          results.push(params[i].value = this.revertDirection(params[i].value));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    Gradient.prototype.fixAngle = function(params) {\n      var first;\n      first = params[0].value;\n      first = parseFloat(first);\n      first = Math.abs(450 - first) % 360;\n      first = this.roundFloat(first, 3);\n      return params[0].value = first + \"deg\";\n    };\n\n    Gradient.prototype.fixRadial = function(params) {\n      var first, i, j, ref, second;\n      first = params[0];\n      second = [];\n      for (i = j = 4, ref = params.length; 4 <= ref ? j < ref : j > ref; i = 4 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        } else {\n          second.push(params[i]);\n        }\n      }\n      return params.splice.apply(params, [0, i].concat(slice.call(second), [params[i + 2]], [first]));\n    };\n\n    Gradient.prototype.revertDirection = function(word) {\n      return this.directions[word.toLowerCase()] || word;\n    };\n\n    Gradient.prototype.roundFloat = function(float, digits) {\n      return parseFloat(float.toFixed(digits));\n    };\n\n    Gradient.prototype.oldWebkit = function(node) {\n      var i, j, k, len, len1, nodes, param, params, string;\n      nodes = node.nodes;\n      string = parser.stringify(node.nodes);\n      if (this.name !== 'linear-gradient') {\n        return false;\n      }\n      if (nodes[0] && nodes[0].value.indexOf('deg') !== -1) {\n        return false;\n      }\n      if (string.indexOf('px') !== -1) {\n        return false;\n      }\n      if (string.indexOf('-corner') !== -1) {\n        return false;\n      }\n      if (string.indexOf('-side') !== -1) {\n        return false;\n      }\n      params = [[]];\n      for (j = 0, len = nodes.length; j < len; j++) {\n        i = nodes[j];\n        params[params.length - 1].push(i);\n        if (i.type === 'div' && i.value === ',') {\n          params.push([]);\n        }\n      }\n      this.oldDirection(params);\n      this.colorStops(params);\n      node.nodes = [];\n      for (k = 0, len1 = params.length; k < len1; k++) {\n        param = params[k];\n        node.nodes = node.nodes.concat(param);\n      }\n      node.nodes.unshift({\n        type: 'word',\n        value: 'linear'\n      }, this.cloneDiv(node.nodes));\n      node.value = '-webkit-gradient';\n      return true;\n    };\n\n    Gradient.prototype.oldDirection = function(params) {\n      var div, j, len, node, old, ref, words;\n      div = this.cloneDiv(params[0]);\n      if (params[0][0].value !== 'to') {\n        return params.unshift([\n          {\n            type: 'word',\n            value: this.oldDirections.bottom\n          }, div\n        ]);\n      } else {\n        words = [];\n        ref = params[0].slice(2);\n        for (j = 0, len = ref.length; j < len; j++) {\n          node = ref[j];\n          if (node.type === 'word') {\n            words.push(node.value.toLowerCase());\n          }\n        }\n        words = words.join(' ');\n        old = this.oldDirections[words] || words;\n        return params[0] = [\n          {\n            type: 'word',\n            value: old\n          }, div\n        ];\n      }\n    };\n\n    Gradient.prototype.cloneDiv = function(params) {\n      var i, j, len;\n      for (j = 0, len = params.length; j < len; j++) {\n        i = params[j];\n        if (i.type === 'div' && i.value === ',') {\n          return i;\n        }\n      }\n      return {\n        type: 'div',\n        value: ',',\n        after: ' '\n      };\n    };\n\n    Gradient.prototype.colorStops = function(params) {\n      var color, div, i, j, len, param, pos, results, stop;\n      results = [];\n      for (i = j = 0, len = params.length; j < len; i = ++j) {\n        param = params[i];\n        if (i === 0) {\n          continue;\n        }\n        color = parser.stringify(param[0]);\n        if (param[1] && param[1].type === 'word') {\n          pos = param[1].value;\n        } else if (param[2] && param[2].type === 'word') {\n          pos = param[2].value;\n        }\n        stop = i === 1 && (!pos || pos === '0%') ? \"from(\" + color + \")\" : i === params.length - 1 && (!pos || pos === '100%') ? \"to(\" + color + \")\" : pos ? \"color-stop(\" + pos + \", \" + color + \")\" : \"color-stop(\" + color + \")\";\n        div = param[param.length - 1];\n        params[i] = [\n          {\n            type: 'word',\n            value: stop\n          }\n        ];\n        if (div.type === 'div' && div.value === ',') {\n          results.push(params[i].push(div));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    Gradient.prototype.old = function(prefix) {\n      var regexp, string, type;\n      if (prefix === '-webkit-') {\n        type = this.name === 'linear-gradient' ? 'linear' : 'radial';\n        string = '-gradient';\n        regexp = utils.regexp(\"-webkit-(\" + type + \"-gradient|gradient\\\\(\\\\s*\" + type + \")\", false);\n        return new OldValue(this.name, prefix + this.name, string, regexp);\n      } else {\n        return Gradient.__super__.old.apply(this, arguments);\n      }\n    };\n\n    Gradient.prototype.add = function(decl, prefix) {\n      var p;\n      p = decl.prop;\n      if (p.indexOf('mask') !== -1) {\n        if (prefix === '-webkit-' || prefix === '-webkit- old') {\n          return Gradient.__super__.add.apply(this, arguments);\n        }\n      } else if (p === 'list-style' || p === 'list-style-image' || p === 'content') {\n        if (prefix === '-webkit-' || prefix === '-webkit- old') {\n          return Gradient.__super__.add.apply(this, arguments);\n        }\n      } else {\n        return Gradient.__super__.add.apply(this, arguments);\n      }\n    };\n\n    return Gradient;\n\n  })(Value);\n\n  module.exports = Gradient;\n\n}).call(this);\n"},"lineCount":369}},"hash":"7cb6b55b3e92360979717216167c7918","cacheData":{"env":{}}}