{"id":"../node_modules/autoprefixer/lib/utils.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"postcss/lib/list","loc":{"line":4,"column":17},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/utils.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/node_modules/postcss/lib/list.js"}],"generated":{"js":"(function() {\n  var list;\n\n  list = require('postcss/lib/list');\n\n  module.exports = {\n    error: function(text) {\n      var err;\n      err = new Error(text);\n      err.autoprefixer = true;\n      throw err;\n    },\n    uniq: function(array) {\n      var filtered, i, j, len;\n      filtered = [];\n      for (j = 0, len = array.length; j < len; j++) {\n        i = array[j];\n        if (filtered.indexOf(i) === -1) {\n          filtered.push(i);\n        }\n      }\n      return filtered;\n    },\n    removeNote: function(string) {\n      if (string.indexOf(' ') === -1) {\n        return string;\n      } else {\n        return string.split(' ')[0];\n      }\n    },\n    escapeRegexp: function(string) {\n      return string.replace(/[.?*+\\^\\$\\[\\]\\\\(){}|\\-]/g, '\\\\$&');\n    },\n    regexp: function(word, escape) {\n      if (escape == null) {\n        escape = true;\n      }\n      if (escape) {\n        word = this.escapeRegexp(word);\n      }\n      return RegExp(\"(^|[\\\\s,(])(\" + word + \"($|[\\\\s(,]))\", \"gi\");\n    },\n    editList: function(value, callback) {\n      var changed, join, origin;\n      origin = list.comma(value);\n      changed = callback(origin, []);\n      if (origin === changed) {\n        return value;\n      } else {\n        join = value.match(/,\\s*/);\n        join = join ? join[0] : ', ';\n        return changed.join(join);\n      }\n    }\n  };\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/utils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/utils.js":"(function() {\n  var list;\n\n  list = require('postcss/lib/list');\n\n  module.exports = {\n    error: function(text) {\n      var err;\n      err = new Error(text);\n      err.autoprefixer = true;\n      throw err;\n    },\n    uniq: function(array) {\n      var filtered, i, j, len;\n      filtered = [];\n      for (j = 0, len = array.length; j < len; j++) {\n        i = array[j];\n        if (filtered.indexOf(i) === -1) {\n          filtered.push(i);\n        }\n      }\n      return filtered;\n    },\n    removeNote: function(string) {\n      if (string.indexOf(' ') === -1) {\n        return string;\n      } else {\n        return string.split(' ')[0];\n      }\n    },\n    escapeRegexp: function(string) {\n      return string.replace(/[.?*+\\^\\$\\[\\]\\\\(){}|\\-]/g, '\\\\$&');\n    },\n    regexp: function(word, escape) {\n      if (escape == null) {\n        escape = true;\n      }\n      if (escape) {\n        word = this.escapeRegexp(word);\n      }\n      return RegExp(\"(^|[\\\\s,(])(\" + word + \"($|[\\\\s(,]))\", \"gi\");\n    },\n    editList: function(value, callback) {\n      var changed, join, origin;\n      origin = list.comma(value);\n      changed = callback(origin, []);\n      if (origin === changed) {\n        return value;\n      } else {\n        join = value.match(/,\\s*/);\n        join = join ? join[0] : ', ';\n        return changed.join(join);\n      }\n    }\n  };\n\n}).call(this);\n"},"lineCount":58}},"hash":"da8f7b26fe1677b1e9da2abd7dd0f84f","cacheData":{"env":{}}}