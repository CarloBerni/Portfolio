{"id":"../node_modules/autoprefixer/lib/processor.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"postcss/lib/vendor","loc":{"line":4,"column":19},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/processor.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/node_modules/postcss/lib/vendor.js"},{"name":"./value","loc":{"line":6,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/processor.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/value.js"},{"name":"./utils","loc":{"line":8,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/processor.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/utils.js"}],"generated":{"js":"(function() {\n  var OLD_DIRECTION, Processor, SIZES, Value, utils, vendor;\n\n  vendor = require('postcss/lib/vendor');\n\n  Value = require('./value');\n\n  utils = require('./utils');\n\n  OLD_DIRECTION = /(^|[^-])(linear|radial)-gradient\\(\\s*(top|left|right|bottom)/i;\n\n  SIZES = ['width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'];\n\n  Processor = (function() {\n    function Processor(prefixes) {\n      this.prefixes = prefixes;\n    }\n\n    Processor.prototype.add = function(css, result) {\n      var keyframes, resolution, supports, viewport;\n      resolution = this.prefixes.add['@resolution'];\n      keyframes = this.prefixes.add['@keyframes'];\n      viewport = this.prefixes.add['@viewport'];\n      supports = this.prefixes.add['@supports'];\n      css.walkAtRules((function(_this) {\n        return function(rule) {\n          if (rule.name === 'keyframes') {\n            if (!_this.disabled(rule)) {\n              return keyframes != null ? keyframes.process(rule) : void 0;\n            }\n          } else if (rule.name === 'viewport') {\n            if (!_this.disabled(rule)) {\n              return viewport != null ? viewport.process(rule) : void 0;\n            }\n          } else if (rule.name === 'supports') {\n            if (_this.prefixes.options.supports !== false && !_this.disabled(rule)) {\n              return supports.process(rule);\n            }\n          } else if (rule.name === 'media' && rule.params.indexOf('-resolution') !== -1) {\n            if (!_this.disabled(rule)) {\n              return resolution != null ? resolution.process(rule) : void 0;\n            }\n          }\n        };\n      })(this));\n      css.walkRules((function(_this) {\n        return function(rule) {\n          var j, len, ref, results, selector;\n          if (_this.disabled(rule)) {\n            return;\n          }\n          ref = _this.prefixes.add.selectors;\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            selector = ref[j];\n            results.push(selector.process(rule, result));\n          }\n          return results;\n        };\n      })(this));\n      css.walkDecls((function(_this) {\n        return function(decl) {\n          var display, prefixer;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          if (decl.prop === 'display' && decl.value === 'box') {\n            result.warn('You should write display: flex by final spec ' + 'instead of display: box', {\n              node: decl\n            });\n            return;\n          }\n          if (decl.value.indexOf('linear-gradient') !== -1) {\n            if (OLD_DIRECTION.test(decl.value)) {\n              result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `to left` instead of `right`.', {\n                node: decl\n              });\n            }\n          }\n          if (decl.prop === 'text-emphasis-position') {\n            if (decl.value === 'under' || decl.value === 'over') {\n              result.warn('You should use 2 values for text-emphasis-position ' + 'For example, `under left` instead of just `under`.', {\n                node: decl\n              });\n            }\n          }\n          if (SIZES.indexOf(decl.prop) !== -1) {\n            if (decl.value.indexOf('fill-available') !== -1) {\n              result.warn('Replace fill-available to stretch, ' + 'because spec had been changed', {\n                node: decl\n              });\n            } else if (decl.value.indexOf('fill') !== -1) {\n              result.warn('Replace fill to stretch, because spec had been changed', {\n                node: decl\n              });\n            }\n          }\n          if (_this.prefixes.options.flexbox !== false) {\n            if (decl.prop === 'grid-row-end' && decl.value.indexOf('span') === -1) {\n              result.warn('IE supports only grid-row-end with span. ' + 'You should add grid: false option to Autoprefixer ' + 'and use some JS grid polyfill for full spec support', {\n                node: decl\n              });\n            }\n            if (decl.prop === 'grid-row') {\n              if (decl.value.indexOf('/') !== -1 && decl.value.indexOf('span') === -1) {\n                result.warn('IE supports only grid-row with / and span. ' + 'You should add grid: false option to Autoprefixer ' + 'and use some JS grid polyfill for full spec support', {\n                  node: decl\n                });\n              }\n            }\n          }\n          if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n            return _this.prefixes.transition.add(decl, result);\n          } else if (decl.prop === 'align-self') {\n            display = _this.displayType(decl);\n            if (display !== 'grid' && _this.prefixes.options.flexbox !== false) {\n              prefixer = _this.prefixes.add['align-self'];\n              if (prefixer && prefixer.prefixes) {\n                prefixer.process(decl);\n              }\n            }\n            if (display !== 'flex' && _this.prefixes.options.grid !== false) {\n              prefixer = _this.prefixes.add['grid-row-align'];\n              if (prefixer && prefixer.prefixes) {\n                return prefixer.process(decl);\n              }\n            }\n          } else {\n            prefixer = _this.prefixes.add[decl.prop];\n            if (prefixer && prefixer.prefixes) {\n              return prefixer.process(decl);\n            }\n          }\n        };\n      })(this));\n      return css.walkDecls((function(_this) {\n        return function(decl) {\n          var j, len, ref, unprefixed, value;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          unprefixed = _this.prefixes.unprefixed(decl.prop);\n          ref = _this.prefixes.values('add', unprefixed);\n          for (j = 0, len = ref.length; j < len; j++) {\n            value = ref[j];\n            value.process(decl, result);\n          }\n          return Value.save(_this.prefixes, decl);\n        };\n      })(this));\n    };\n\n    Processor.prototype.remove = function(css) {\n      var checker, j, len, ref, resolution;\n      resolution = this.prefixes.remove['@resolution'];\n      css.walkAtRules((function(_this) {\n        return function(rule, i) {\n          if (_this.prefixes.remove['@' + rule.name]) {\n            if (!_this.disabled(rule)) {\n              return rule.parent.removeChild(i);\n            }\n          } else if (rule.name === 'media' && rule.params.indexOf('-resolution') !== -1) {\n            return resolution != null ? resolution.clean(rule) : void 0;\n          }\n        };\n      })(this));\n      ref = this.prefixes.remove.selectors;\n      for (j = 0, len = ref.length; j < len; j++) {\n        checker = ref[j];\n        css.walkRules((function(_this) {\n          return function(rule, i) {\n            if (checker.check(rule)) {\n              if (!_this.disabled(rule)) {\n                return rule.parent.removeChild(i);\n              }\n            }\n          };\n        })(this));\n      }\n      return css.walkDecls((function(_this) {\n        return function(decl, i) {\n          var k, len1, notHack, ref1, ref2, rule, unprefixed;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          rule = decl.parent;\n          unprefixed = _this.prefixes.unprefixed(decl.prop);\n          if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n            _this.prefixes.transition.remove(decl);\n          }\n          if ((ref1 = _this.prefixes.remove[decl.prop]) != null ? ref1.remove : void 0) {\n            notHack = _this.prefixes.group(decl).down(function(other) {\n              return _this.prefixes.normalize(other.prop) === unprefixed;\n            });\n            if (unprefixed === 'flex-flow') {\n              notHack = true;\n            }\n            if (notHack && !_this.withHackValue(decl)) {\n              if (decl.raw('before').indexOf(\"\\n\") > -1) {\n                _this.reduceSpaces(decl);\n              }\n              rule.removeChild(i);\n              return;\n            }\n          }\n          ref2 = _this.prefixes.values('remove', unprefixed);\n          for (k = 0, len1 = ref2.length; k < len1; k++) {\n            checker = ref2[k];\n            if (checker.check(decl.value)) {\n              unprefixed = checker.unprefixed;\n              notHack = _this.prefixes.group(decl).down(function(other) {\n                return other.value.indexOf(unprefixed) !== -1;\n              });\n              if (notHack) {\n                rule.removeChild(i);\n                return;\n              } else if (checker.clean) {\n                checker.clean(decl);\n                return;\n              }\n            }\n          }\n        };\n      })(this));\n    };\n\n    Processor.prototype.withHackValue = function(decl) {\n      return decl.prop === '-webkit-background-clip' && decl.value === 'text';\n    };\n\n    Processor.prototype.disabled = function(node) {\n      var other, status;\n      if (this.prefixes.options.grid === false && node.type === 'decl') {\n        if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {\n          return true;\n        }\n        if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {\n          return true;\n        }\n      }\n      if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n        if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {\n          return true;\n        }\n        other = ['order', 'justify-content', 'align-items', 'align-content'];\n        if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {\n          return true;\n        }\n      }\n      if (node._autoprefixerDisabled != null) {\n        return node._autoprefixerDisabled;\n      } else if (node.nodes) {\n        status = void 0;\n        node.each(function(i) {\n          if (i.type !== 'comment') {\n            return;\n          }\n          if (/(!\\s*)?autoprefixer:\\s*off/i.test(i.text)) {\n            status = false;\n            return false;\n          } else if (/(!\\s*)?autoprefixer:\\s*on/i.test(i.text)) {\n            status = true;\n            return false;\n          }\n        });\n        return node._autoprefixerDisabled = status != null ? !status : node.parent ? this.disabled(node.parent) : false;\n      } else if (node.parent) {\n        return node._autoprefixerDisabled = this.disabled(node.parent);\n      } else {\n        return false;\n      }\n    };\n\n    Processor.prototype.reduceSpaces = function(decl) {\n      var diff, parts, prevMin, stop;\n      stop = false;\n      this.prefixes.group(decl).up(function(other) {\n        return stop = true;\n      });\n      if (stop) {\n        return;\n      }\n      parts = decl.raw('before').split(\"\\n\");\n      prevMin = parts[parts.length - 1].length;\n      diff = false;\n      return this.prefixes.group(decl).down(function(other) {\n        var last;\n        parts = other.raw('before').split(\"\\n\");\n        last = parts.length - 1;\n        if (parts[last].length > prevMin) {\n          if (diff === false) {\n            diff = parts[last].length - prevMin;\n          }\n          parts[last] = parts[last].slice(0, -diff);\n          return other.raws.before = parts.join(\"\\n\");\n        }\n      });\n    };\n\n    Processor.prototype.displayType = function(decl) {\n      var i, j, len, ref;\n      ref = decl.parent.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        i = ref[j];\n        if (i.prop === 'display') {\n          if (i.value.indexOf('flex') !== -1) {\n            return 'flex';\n          } else if (i.value.indexOf('grid') !== -1) {\n            return 'grid';\n          }\n        }\n      }\n      return false;\n    };\n\n    return Processor;\n\n  })();\n\n  module.exports = Processor;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/autoprefixer/lib/processor.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/processor.js":"(function() {\n  var OLD_DIRECTION, Processor, SIZES, Value, utils, vendor;\n\n  vendor = require('postcss/lib/vendor');\n\n  Value = require('./value');\n\n  utils = require('./utils');\n\n  OLD_DIRECTION = /(^|[^-])(linear|radial)-gradient\\(\\s*(top|left|right|bottom)/i;\n\n  SIZES = ['width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'];\n\n  Processor = (function() {\n    function Processor(prefixes) {\n      this.prefixes = prefixes;\n    }\n\n    Processor.prototype.add = function(css, result) {\n      var keyframes, resolution, supports, viewport;\n      resolution = this.prefixes.add['@resolution'];\n      keyframes = this.prefixes.add['@keyframes'];\n      viewport = this.prefixes.add['@viewport'];\n      supports = this.prefixes.add['@supports'];\n      css.walkAtRules((function(_this) {\n        return function(rule) {\n          if (rule.name === 'keyframes') {\n            if (!_this.disabled(rule)) {\n              return keyframes != null ? keyframes.process(rule) : void 0;\n            }\n          } else if (rule.name === 'viewport') {\n            if (!_this.disabled(rule)) {\n              return viewport != null ? viewport.process(rule) : void 0;\n            }\n          } else if (rule.name === 'supports') {\n            if (_this.prefixes.options.supports !== false && !_this.disabled(rule)) {\n              return supports.process(rule);\n            }\n          } else if (rule.name === 'media' && rule.params.indexOf('-resolution') !== -1) {\n            if (!_this.disabled(rule)) {\n              return resolution != null ? resolution.process(rule) : void 0;\n            }\n          }\n        };\n      })(this));\n      css.walkRules((function(_this) {\n        return function(rule) {\n          var j, len, ref, results, selector;\n          if (_this.disabled(rule)) {\n            return;\n          }\n          ref = _this.prefixes.add.selectors;\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            selector = ref[j];\n            results.push(selector.process(rule, result));\n          }\n          return results;\n        };\n      })(this));\n      css.walkDecls((function(_this) {\n        return function(decl) {\n          var display, prefixer;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          if (decl.prop === 'display' && decl.value === 'box') {\n            result.warn('You should write display: flex by final spec ' + 'instead of display: box', {\n              node: decl\n            });\n            return;\n          }\n          if (decl.value.indexOf('linear-gradient') !== -1) {\n            if (OLD_DIRECTION.test(decl.value)) {\n              result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `to left` instead of `right`.', {\n                node: decl\n              });\n            }\n          }\n          if (decl.prop === 'text-emphasis-position') {\n            if (decl.value === 'under' || decl.value === 'over') {\n              result.warn('You should use 2 values for text-emphasis-position ' + 'For example, `under left` instead of just `under`.', {\n                node: decl\n              });\n            }\n          }\n          if (SIZES.indexOf(decl.prop) !== -1) {\n            if (decl.value.indexOf('fill-available') !== -1) {\n              result.warn('Replace fill-available to stretch, ' + 'because spec had been changed', {\n                node: decl\n              });\n            } else if (decl.value.indexOf('fill') !== -1) {\n              result.warn('Replace fill to stretch, because spec had been changed', {\n                node: decl\n              });\n            }\n          }\n          if (_this.prefixes.options.flexbox !== false) {\n            if (decl.prop === 'grid-row-end' && decl.value.indexOf('span') === -1) {\n              result.warn('IE supports only grid-row-end with span. ' + 'You should add grid: false option to Autoprefixer ' + 'and use some JS grid polyfill for full spec support', {\n                node: decl\n              });\n            }\n            if (decl.prop === 'grid-row') {\n              if (decl.value.indexOf('/') !== -1 && decl.value.indexOf('span') === -1) {\n                result.warn('IE supports only grid-row with / and span. ' + 'You should add grid: false option to Autoprefixer ' + 'and use some JS grid polyfill for full spec support', {\n                  node: decl\n                });\n              }\n            }\n          }\n          if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n            return _this.prefixes.transition.add(decl, result);\n          } else if (decl.prop === 'align-self') {\n            display = _this.displayType(decl);\n            if (display !== 'grid' && _this.prefixes.options.flexbox !== false) {\n              prefixer = _this.prefixes.add['align-self'];\n              if (prefixer && prefixer.prefixes) {\n                prefixer.process(decl);\n              }\n            }\n            if (display !== 'flex' && _this.prefixes.options.grid !== false) {\n              prefixer = _this.prefixes.add['grid-row-align'];\n              if (prefixer && prefixer.prefixes) {\n                return prefixer.process(decl);\n              }\n            }\n          } else {\n            prefixer = _this.prefixes.add[decl.prop];\n            if (prefixer && prefixer.prefixes) {\n              return prefixer.process(decl);\n            }\n          }\n        };\n      })(this));\n      return css.walkDecls((function(_this) {\n        return function(decl) {\n          var j, len, ref, unprefixed, value;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          unprefixed = _this.prefixes.unprefixed(decl.prop);\n          ref = _this.prefixes.values('add', unprefixed);\n          for (j = 0, len = ref.length; j < len; j++) {\n            value = ref[j];\n            value.process(decl, result);\n          }\n          return Value.save(_this.prefixes, decl);\n        };\n      })(this));\n    };\n\n    Processor.prototype.remove = function(css) {\n      var checker, j, len, ref, resolution;\n      resolution = this.prefixes.remove['@resolution'];\n      css.walkAtRules((function(_this) {\n        return function(rule, i) {\n          if (_this.prefixes.remove['@' + rule.name]) {\n            if (!_this.disabled(rule)) {\n              return rule.parent.removeChild(i);\n            }\n          } else if (rule.name === 'media' && rule.params.indexOf('-resolution') !== -1) {\n            return resolution != null ? resolution.clean(rule) : void 0;\n          }\n        };\n      })(this));\n      ref = this.prefixes.remove.selectors;\n      for (j = 0, len = ref.length; j < len; j++) {\n        checker = ref[j];\n        css.walkRules((function(_this) {\n          return function(rule, i) {\n            if (checker.check(rule)) {\n              if (!_this.disabled(rule)) {\n                return rule.parent.removeChild(i);\n              }\n            }\n          };\n        })(this));\n      }\n      return css.walkDecls((function(_this) {\n        return function(decl, i) {\n          var k, len1, notHack, ref1, ref2, rule, unprefixed;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          rule = decl.parent;\n          unprefixed = _this.prefixes.unprefixed(decl.prop);\n          if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n            _this.prefixes.transition.remove(decl);\n          }\n          if ((ref1 = _this.prefixes.remove[decl.prop]) != null ? ref1.remove : void 0) {\n            notHack = _this.prefixes.group(decl).down(function(other) {\n              return _this.prefixes.normalize(other.prop) === unprefixed;\n            });\n            if (unprefixed === 'flex-flow') {\n              notHack = true;\n            }\n            if (notHack && !_this.withHackValue(decl)) {\n              if (decl.raw('before').indexOf(\"\\n\") > -1) {\n                _this.reduceSpaces(decl);\n              }\n              rule.removeChild(i);\n              return;\n            }\n          }\n          ref2 = _this.prefixes.values('remove', unprefixed);\n          for (k = 0, len1 = ref2.length; k < len1; k++) {\n            checker = ref2[k];\n            if (checker.check(decl.value)) {\n              unprefixed = checker.unprefixed;\n              notHack = _this.prefixes.group(decl).down(function(other) {\n                return other.value.indexOf(unprefixed) !== -1;\n              });\n              if (notHack) {\n                rule.removeChild(i);\n                return;\n              } else if (checker.clean) {\n                checker.clean(decl);\n                return;\n              }\n            }\n          }\n        };\n      })(this));\n    };\n\n    Processor.prototype.withHackValue = function(decl) {\n      return decl.prop === '-webkit-background-clip' && decl.value === 'text';\n    };\n\n    Processor.prototype.disabled = function(node) {\n      var other, status;\n      if (this.prefixes.options.grid === false && node.type === 'decl') {\n        if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {\n          return true;\n        }\n        if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {\n          return true;\n        }\n      }\n      if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n        if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {\n          return true;\n        }\n        other = ['order', 'justify-content', 'align-items', 'align-content'];\n        if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {\n          return true;\n        }\n      }\n      if (node._autoprefixerDisabled != null) {\n        return node._autoprefixerDisabled;\n      } else if (node.nodes) {\n        status = void 0;\n        node.each(function(i) {\n          if (i.type !== 'comment') {\n            return;\n          }\n          if (/(!\\s*)?autoprefixer:\\s*off/i.test(i.text)) {\n            status = false;\n            return false;\n          } else if (/(!\\s*)?autoprefixer:\\s*on/i.test(i.text)) {\n            status = true;\n            return false;\n          }\n        });\n        return node._autoprefixerDisabled = status != null ? !status : node.parent ? this.disabled(node.parent) : false;\n      } else if (node.parent) {\n        return node._autoprefixerDisabled = this.disabled(node.parent);\n      } else {\n        return false;\n      }\n    };\n\n    Processor.prototype.reduceSpaces = function(decl) {\n      var diff, parts, prevMin, stop;\n      stop = false;\n      this.prefixes.group(decl).up(function(other) {\n        return stop = true;\n      });\n      if (stop) {\n        return;\n      }\n      parts = decl.raw('before').split(\"\\n\");\n      prevMin = parts[parts.length - 1].length;\n      diff = false;\n      return this.prefixes.group(decl).down(function(other) {\n        var last;\n        parts = other.raw('before').split(\"\\n\");\n        last = parts.length - 1;\n        if (parts[last].length > prevMin) {\n          if (diff === false) {\n            diff = parts[last].length - prevMin;\n          }\n          parts[last] = parts[last].slice(0, -diff);\n          return other.raws.before = parts.join(\"\\n\");\n        }\n      });\n    };\n\n    Processor.prototype.displayType = function(decl) {\n      var i, j, len, ref;\n      ref = decl.parent.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        i = ref[j];\n        if (i.prop === 'display') {\n          if (i.value.indexOf('flex') !== -1) {\n            return 'flex';\n          } else if (i.value.indexOf('grid') !== -1) {\n            return 'grid';\n          }\n        }\n      }\n      return false;\n    };\n\n    return Processor;\n\n  })();\n\n  module.exports = Processor;\n\n}).call(this);\n"},"lineCount":323}},"hash":"9659fefc47e18667e08af02803d186cf","cacheData":{"env":{}}}