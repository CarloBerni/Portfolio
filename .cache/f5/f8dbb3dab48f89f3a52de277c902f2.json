{"id":"../node_modules/autoprefixer/lib/brackets.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632}],"generated":{"js":"(function() {\n  var brackets, last;\n\n  last = function(array) {\n    return array[array.length - 1];\n  };\n\n  brackets = {\n    parse: function(str) {\n      var current, j, len, stack, sym;\n      current = [''];\n      stack = [current];\n      for (j = 0, len = str.length; j < len; j++) {\n        sym = str[j];\n        if (sym === '(') {\n          current = [''];\n          last(stack).push(current);\n          stack.push(current);\n        } else if (sym === ')') {\n          stack.pop();\n          current = last(stack);\n          current.push('');\n        } else {\n          current[current.length - 1] += sym;\n        }\n      }\n      return stack[0];\n    },\n    stringify: function(ast) {\n      var i, j, len, result;\n      result = '';\n      for (j = 0, len = ast.length; j < len; j++) {\n        i = ast[j];\n        if (typeof i === 'object') {\n          result += '(' + brackets.stringify(i) + ')';\n        } else {\n          result += i;\n        }\n      }\n      return result;\n    }\n  };\n\n  module.exports = brackets;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/brackets.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/brackets.js":"(function() {\n  var brackets, last;\n\n  last = function(array) {\n    return array[array.length - 1];\n  };\n\n  brackets = {\n    parse: function(str) {\n      var current, j, len, stack, sym;\n      current = [''];\n      stack = [current];\n      for (j = 0, len = str.length; j < len; j++) {\n        sym = str[j];\n        if (sym === '(') {\n          current = [''];\n          last(stack).push(current);\n          stack.push(current);\n        } else if (sym === ')') {\n          stack.pop();\n          current = last(stack);\n          current.push('');\n        } else {\n          current[current.length - 1] += sym;\n        }\n      }\n      return stack[0];\n    },\n    stringify: function(ast) {\n      var i, j, len, result;\n      result = '';\n      for (j = 0, len = ast.length; j < len; j++) {\n        i = ast[j];\n        if (typeof i === 'object') {\n          result += '(' + brackets.stringify(i) + ')';\n        } else {\n          result += i;\n        }\n      }\n      return result;\n    }\n  };\n\n  module.exports = brackets;\n\n}).call(this);\n"},"lineCount":47}},"hash":"ef7b19320059ab43d05e962a6d7d5636","cacheData":{"env":{}}}