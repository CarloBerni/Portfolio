{"id":"../node_modules/autoprefixer/lib/supports.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"./browsers","loc":{"line":4,"column":21},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/supports.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/browsers.js"},{"name":"./brackets","loc":{"line":6,"column":21},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/supports.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/brackets.js"},{"name":"./value","loc":{"line":8,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/supports.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/value.js"},{"name":"./utils","loc":{"line":10,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/supports.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/utils.js"},{"name":"postcss","loc":{"line":12,"column":20},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/supports.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/node_modules/postcss/lib/postcss.js"},{"name":"caniuse-db/features-json/css-featurequeries.json","loc":{"line":16,"column":17},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/supports.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/caniuse-db/features-json/css-featurequeries.json"}],"generated":{"js":"(function() {\n  var Browsers, Supports, Value, brackets, browser, data, postcss, ref, support, supported, utils, version, versions;\n\n  Browsers = require('./browsers');\n\n  brackets = require('./brackets');\n\n  Value = require('./value');\n\n  utils = require('./utils');\n\n  postcss = require('postcss');\n\n  supported = [];\n\n  data = require('caniuse-db/features-json/css-featurequeries.json');\n\n  ref = data.stats;\n  for (browser in ref) {\n    versions = ref[browser];\n    for (version in versions) {\n      support = versions[version];\n      if (/y/.test(support)) {\n        supported.push(browser + ' ' + version);\n      }\n    }\n  }\n\n  Supports = (function() {\n    function Supports(Prefixes, all1) {\n      this.Prefixes = Prefixes;\n      this.all = all1;\n    }\n\n    Supports.prototype.prefixer = function() {\n      var browsers, filtered;\n      if (this.prefixerCache) {\n        return this.prefixerCache;\n      }\n      filtered = this.all.browsers.selected.filter((function(_this) {\n        return function(i) {\n          return supported.indexOf(i) !== -1;\n        };\n      })(this));\n      browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);\n      return this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);\n    };\n\n    Supports.prototype.parse = function(str) {\n      var prop, ref1, value;\n      ref1 = str.split(':'), prop = ref1[0], value = ref1[1];\n      value || (value = '');\n      return [prop.trim(), value.trim()];\n    };\n\n    Supports.prototype.virtual = function(str) {\n      var prop, ref1, rule, value;\n      ref1 = this.parse(str), prop = ref1[0], value = ref1[1];\n      rule = postcss.parse('a{}').first;\n      rule.append({\n        prop: prop,\n        value: value,\n        raws: {\n          before: ''\n        }\n      });\n      return rule;\n    };\n\n    Supports.prototype.prefixed = function(str) {\n      var decl, j, k, len, len1, prefixer, ref1, ref2, rule, value;\n      rule = this.virtual(str);\n      if (this.disabled(rule.first)) {\n        return rule.nodes;\n      }\n      prefixer = this.prefixer().add[rule.first.prop];\n      if (prefixer != null) {\n        if (typeof prefixer.process === \"function\") {\n          prefixer.process(rule.first);\n        }\n      }\n      ref1 = rule.nodes;\n      for (j = 0, len = ref1.length; j < len; j++) {\n        decl = ref1[j];\n        ref2 = this.prefixer().values('add', rule.first.prop);\n        for (k = 0, len1 = ref2.length; k < len1; k++) {\n          value = ref2[k];\n          value.process(decl);\n        }\n        Value.save(this.all, decl);\n      }\n      return rule.nodes;\n    };\n\n    Supports.prototype.isNot = function(node) {\n      return typeof node === 'string' && /not\\s*/i.test(node);\n    };\n\n    Supports.prototype.isOr = function(node) {\n      return typeof node === 'string' && /\\s*or\\s*/i.test(node);\n    };\n\n    Supports.prototype.isProp = function(node) {\n      return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';\n    };\n\n    Supports.prototype.isHack = function(all, unprefixed) {\n      var check;\n      check = new RegExp('(\\\\(|\\\\s)' + utils.escapeRegexp(unprefixed) + ':');\n      return !check.test(all);\n    };\n\n    Supports.prototype.toRemove = function(str, all) {\n      var checker, j, len, prop, ref1, ref2, ref3, unprefixed, value;\n      ref1 = this.parse(str), prop = ref1[0], value = ref1[1];\n      unprefixed = this.all.unprefixed(prop);\n      if (((ref2 = this.all.cleaner().remove[prop]) != null ? ref2.remove : void 0) && !this.isHack(all, unprefixed)) {\n        return true;\n      }\n      ref3 = this.all.cleaner().values('remove', unprefixed);\n      for (j = 0, len = ref3.length; j < len; j++) {\n        checker = ref3[j];\n        if (checker.check(value)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Supports.prototype.remove = function(nodes, all) {\n      var i;\n      i = 0;\n      while (i < nodes.length) {\n        if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {\n          if (this.toRemove(nodes[i][0], all)) {\n            nodes.splice(i, 2);\n          } else {\n            i += 2;\n          }\n        } else {\n          if (typeof nodes[i] === 'object') {\n            nodes[i] = this.remove(nodes[i], all);\n          }\n          i += 1;\n        }\n      }\n      return nodes;\n    };\n\n    Supports.prototype.cleanBrackets = function(nodes) {\n      return nodes.map((function(_this) {\n        return function(i) {\n          if (typeof i === 'object') {\n            if (i.length === 1 && typeof i[0] === 'object') {\n              return _this.cleanBrackets(i[0]);\n            } else {\n              return _this.cleanBrackets(i);\n            }\n          } else {\n            return i;\n          }\n        };\n      })(this));\n    };\n\n    Supports.prototype.convert = function(progress) {\n      var i, j, len, result;\n      result = [''];\n      for (j = 0, len = progress.length; j < len; j++) {\n        i = progress[j];\n        result.push([i.prop + \": \" + i.value]);\n        result.push(' or ');\n      }\n      result[result.length - 1] = '';\n      return result;\n    };\n\n    Supports.prototype.normalize = function(nodes) {\n      if (typeof nodes === 'object') {\n        nodes = nodes.filter(function(i) {\n          return i !== '';\n        });\n        if (typeof nodes[0] === 'string' && nodes[0].indexOf(':') !== -1) {\n          return [brackets.stringify(nodes)];\n        } else {\n          return nodes.map((function(_this) {\n            return function(i) {\n              return _this.normalize(i);\n            };\n          })(this));\n        }\n      } else {\n        return nodes;\n      }\n    };\n\n    Supports.prototype.add = function(nodes, all) {\n      return nodes.map((function(_this) {\n        return function(i) {\n          var prefixed;\n          if (_this.isProp(i)) {\n            prefixed = _this.prefixed(i[0]);\n            if (prefixed.length > 1) {\n              return _this.convert(prefixed);\n            } else {\n              return i;\n            }\n          } else if (typeof i === 'object') {\n            return _this.add(i, all);\n          } else {\n            return i;\n          }\n        };\n      })(this));\n    };\n\n    Supports.prototype.process = function(rule) {\n      var ast;\n      ast = brackets.parse(rule.params);\n      ast = this.normalize(ast);\n      ast = this.remove(ast, rule.params);\n      ast = this.add(ast, rule.params);\n      ast = this.cleanBrackets(ast);\n      return rule.params = brackets.stringify(ast);\n    };\n\n    Supports.prototype.disabled = function(node) {\n      var other;\n      if (this.all.options.grid === false) {\n        if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {\n          return true;\n        }\n        if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {\n          return true;\n        }\n      }\n      if (this.all.options.flexbox === false) {\n        if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {\n          return true;\n        }\n        other = ['order', 'justify-content', 'align-items', 'align-content'];\n        if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return Supports;\n\n  })();\n\n  module.exports = Supports;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/autoprefixer/lib/supports.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/supports.js":"(function() {\n  var Browsers, Supports, Value, brackets, browser, data, postcss, ref, support, supported, utils, version, versions;\n\n  Browsers = require('./browsers');\n\n  brackets = require('./brackets');\n\n  Value = require('./value');\n\n  utils = require('./utils');\n\n  postcss = require('postcss');\n\n  supported = [];\n\n  data = require('caniuse-db/features-json/css-featurequeries.json');\n\n  ref = data.stats;\n  for (browser in ref) {\n    versions = ref[browser];\n    for (version in versions) {\n      support = versions[version];\n      if (/y/.test(support)) {\n        supported.push(browser + ' ' + version);\n      }\n    }\n  }\n\n  Supports = (function() {\n    function Supports(Prefixes, all1) {\n      this.Prefixes = Prefixes;\n      this.all = all1;\n    }\n\n    Supports.prototype.prefixer = function() {\n      var browsers, filtered;\n      if (this.prefixerCache) {\n        return this.prefixerCache;\n      }\n      filtered = this.all.browsers.selected.filter((function(_this) {\n        return function(i) {\n          return supported.indexOf(i) !== -1;\n        };\n      })(this));\n      browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);\n      return this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);\n    };\n\n    Supports.prototype.parse = function(str) {\n      var prop, ref1, value;\n      ref1 = str.split(':'), prop = ref1[0], value = ref1[1];\n      value || (value = '');\n      return [prop.trim(), value.trim()];\n    };\n\n    Supports.prototype.virtual = function(str) {\n      var prop, ref1, rule, value;\n      ref1 = this.parse(str), prop = ref1[0], value = ref1[1];\n      rule = postcss.parse('a{}').first;\n      rule.append({\n        prop: prop,\n        value: value,\n        raws: {\n          before: ''\n        }\n      });\n      return rule;\n    };\n\n    Supports.prototype.prefixed = function(str) {\n      var decl, j, k, len, len1, prefixer, ref1, ref2, rule, value;\n      rule = this.virtual(str);\n      if (this.disabled(rule.first)) {\n        return rule.nodes;\n      }\n      prefixer = this.prefixer().add[rule.first.prop];\n      if (prefixer != null) {\n        if (typeof prefixer.process === \"function\") {\n          prefixer.process(rule.first);\n        }\n      }\n      ref1 = rule.nodes;\n      for (j = 0, len = ref1.length; j < len; j++) {\n        decl = ref1[j];\n        ref2 = this.prefixer().values('add', rule.first.prop);\n        for (k = 0, len1 = ref2.length; k < len1; k++) {\n          value = ref2[k];\n          value.process(decl);\n        }\n        Value.save(this.all, decl);\n      }\n      return rule.nodes;\n    };\n\n    Supports.prototype.isNot = function(node) {\n      return typeof node === 'string' && /not\\s*/i.test(node);\n    };\n\n    Supports.prototype.isOr = function(node) {\n      return typeof node === 'string' && /\\s*or\\s*/i.test(node);\n    };\n\n    Supports.prototype.isProp = function(node) {\n      return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';\n    };\n\n    Supports.prototype.isHack = function(all, unprefixed) {\n      var check;\n      check = new RegExp('(\\\\(|\\\\s)' + utils.escapeRegexp(unprefixed) + ':');\n      return !check.test(all);\n    };\n\n    Supports.prototype.toRemove = function(str, all) {\n      var checker, j, len, prop, ref1, ref2, ref3, unprefixed, value;\n      ref1 = this.parse(str), prop = ref1[0], value = ref1[1];\n      unprefixed = this.all.unprefixed(prop);\n      if (((ref2 = this.all.cleaner().remove[prop]) != null ? ref2.remove : void 0) && !this.isHack(all, unprefixed)) {\n        return true;\n      }\n      ref3 = this.all.cleaner().values('remove', unprefixed);\n      for (j = 0, len = ref3.length; j < len; j++) {\n        checker = ref3[j];\n        if (checker.check(value)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Supports.prototype.remove = function(nodes, all) {\n      var i;\n      i = 0;\n      while (i < nodes.length) {\n        if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {\n          if (this.toRemove(nodes[i][0], all)) {\n            nodes.splice(i, 2);\n          } else {\n            i += 2;\n          }\n        } else {\n          if (typeof nodes[i] === 'object') {\n            nodes[i] = this.remove(nodes[i], all);\n          }\n          i += 1;\n        }\n      }\n      return nodes;\n    };\n\n    Supports.prototype.cleanBrackets = function(nodes) {\n      return nodes.map((function(_this) {\n        return function(i) {\n          if (typeof i === 'object') {\n            if (i.length === 1 && typeof i[0] === 'object') {\n              return _this.cleanBrackets(i[0]);\n            } else {\n              return _this.cleanBrackets(i);\n            }\n          } else {\n            return i;\n          }\n        };\n      })(this));\n    };\n\n    Supports.prototype.convert = function(progress) {\n      var i, j, len, result;\n      result = [''];\n      for (j = 0, len = progress.length; j < len; j++) {\n        i = progress[j];\n        result.push([i.prop + \": \" + i.value]);\n        result.push(' or ');\n      }\n      result[result.length - 1] = '';\n      return result;\n    };\n\n    Supports.prototype.normalize = function(nodes) {\n      if (typeof nodes === 'object') {\n        nodes = nodes.filter(function(i) {\n          return i !== '';\n        });\n        if (typeof nodes[0] === 'string' && nodes[0].indexOf(':') !== -1) {\n          return [brackets.stringify(nodes)];\n        } else {\n          return nodes.map((function(_this) {\n            return function(i) {\n              return _this.normalize(i);\n            };\n          })(this));\n        }\n      } else {\n        return nodes;\n      }\n    };\n\n    Supports.prototype.add = function(nodes, all) {\n      return nodes.map((function(_this) {\n        return function(i) {\n          var prefixed;\n          if (_this.isProp(i)) {\n            prefixed = _this.prefixed(i[0]);\n            if (prefixed.length > 1) {\n              return _this.convert(prefixed);\n            } else {\n              return i;\n            }\n          } else if (typeof i === 'object') {\n            return _this.add(i, all);\n          } else {\n            return i;\n          }\n        };\n      })(this));\n    };\n\n    Supports.prototype.process = function(rule) {\n      var ast;\n      ast = brackets.parse(rule.params);\n      ast = this.normalize(ast);\n      ast = this.remove(ast, rule.params);\n      ast = this.add(ast, rule.params);\n      ast = this.cleanBrackets(ast);\n      return rule.params = brackets.stringify(ast);\n    };\n\n    Supports.prototype.disabled = function(node) {\n      var other;\n      if (this.all.options.grid === false) {\n        if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {\n          return true;\n        }\n        if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {\n          return true;\n        }\n      }\n      if (this.all.options.flexbox === false) {\n        if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {\n          return true;\n        }\n        other = ['order', 'justify-content', 'align-items', 'align-content'];\n        if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return Supports;\n\n  })();\n\n  module.exports = Supports;\n\n}).call(this);\n"},"lineCount":256}},"hash":"c632e7b874df36bc87adf3c50a8639e8","cacheData":{"env":{}}}