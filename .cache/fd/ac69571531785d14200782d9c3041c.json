{"id":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"../declaration","loc":{"line":6,"column":24},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/transform-decl.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/declaration.js"}],"generated":{"js":"(function() {\n  var Declaration, TransformDecl,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  TransformDecl = (function(superClass) {\n    extend(TransformDecl, superClass);\n\n    function TransformDecl() {\n      return TransformDecl.__super__.constructor.apply(this, arguments);\n    }\n\n    TransformDecl.names = ['transform', 'transform-origin'];\n\n    TransformDecl.functions3d = ['matrix3d', 'translate3d', 'translateZ', 'scale3d', 'scaleZ', 'rotate3d', 'rotateX', 'rotateY', 'perspective'];\n\n    TransformDecl.prototype.keyframeParents = function(decl) {\n      var parent;\n      parent = decl.parent;\n      while (parent) {\n        if (parent.type === 'atrule' && parent.name === 'keyframes') {\n          return true;\n        }\n        parent = parent.parent;\n      }\n      return false;\n    };\n\n    TransformDecl.prototype.contain3d = function(decl) {\n      var func, i, len, ref;\n      if (decl.prop === 'transform-origin') {\n        return false;\n      }\n      ref = TransformDecl.functions3d;\n      for (i = 0, len = ref.length; i < len; i++) {\n        func = ref[i];\n        if (decl.value.indexOf(func + \"(\") !== -1) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    TransformDecl.prototype.set = function(decl, prefix) {\n      decl = TransformDecl.__super__.set.apply(this, arguments);\n      if (prefix === '-ms-') {\n        decl.value = decl.value.replace(/rotateZ/gi, 'rotate');\n      }\n      return decl;\n    };\n\n    TransformDecl.prototype.insert = function(decl, prefix, prefixes) {\n      if (prefix === '-ms-') {\n        if (!this.contain3d(decl) && !this.keyframeParents(decl)) {\n          return TransformDecl.__super__.insert.apply(this, arguments);\n        }\n      } else if (prefix === '-o-') {\n        if (!this.contain3d(decl)) {\n          return TransformDecl.__super__.insert.apply(this, arguments);\n        }\n      } else {\n        return TransformDecl.__super__.insert.apply(this, arguments);\n      }\n    };\n\n    return TransformDecl;\n\n  })(Declaration);\n\n  module.exports = TransformDecl;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/transform-decl.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/hacks/transform-decl.js":"(function() {\n  var Declaration, TransformDecl,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  TransformDecl = (function(superClass) {\n    extend(TransformDecl, superClass);\n\n    function TransformDecl() {\n      return TransformDecl.__super__.constructor.apply(this, arguments);\n    }\n\n    TransformDecl.names = ['transform', 'transform-origin'];\n\n    TransformDecl.functions3d = ['matrix3d', 'translate3d', 'translateZ', 'scale3d', 'scaleZ', 'rotate3d', 'rotateX', 'rotateY', 'perspective'];\n\n    TransformDecl.prototype.keyframeParents = function(decl) {\n      var parent;\n      parent = decl.parent;\n      while (parent) {\n        if (parent.type === 'atrule' && parent.name === 'keyframes') {\n          return true;\n        }\n        parent = parent.parent;\n      }\n      return false;\n    };\n\n    TransformDecl.prototype.contain3d = function(decl) {\n      var func, i, len, ref;\n      if (decl.prop === 'transform-origin') {\n        return false;\n      }\n      ref = TransformDecl.functions3d;\n      for (i = 0, len = ref.length; i < len; i++) {\n        func = ref[i];\n        if (decl.value.indexOf(func + \"(\") !== -1) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    TransformDecl.prototype.set = function(decl, prefix) {\n      decl = TransformDecl.__super__.set.apply(this, arguments);\n      if (prefix === '-ms-') {\n        decl.value = decl.value.replace(/rotateZ/gi, 'rotate');\n      }\n      return decl;\n    };\n\n    TransformDecl.prototype.insert = function(decl, prefix, prefixes) {\n      if (prefix === '-ms-') {\n        if (!this.contain3d(decl) && !this.keyframeParents(decl)) {\n          return TransformDecl.__super__.insert.apply(this, arguments);\n        }\n      } else if (prefix === '-o-') {\n        if (!this.contain3d(decl)) {\n          return TransformDecl.__super__.insert.apply(this, arguments);\n        }\n      } else {\n        return TransformDecl.__super__.insert.apply(this, arguments);\n      }\n    };\n\n    return TransformDecl;\n\n  })(Declaration);\n\n  module.exports = TransformDecl;\n\n}).call(this);\n"},"lineCount":75}},"hash":"bc00a5b9c74d6ac2bcc146e7619980ec","cacheData":{"env":{}}}