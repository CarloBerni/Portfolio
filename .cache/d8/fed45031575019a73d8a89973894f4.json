{"id":"../node_modules/autoprefixer/lib/hacks/placeholder.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"../selector","loc":{"line":6,"column":21},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/placeholder.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/selector.js"}],"generated":{"js":"(function() {\n  var Placeholder, Selector,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Selector = require('../selector');\n\n  Placeholder = (function(superClass) {\n    extend(Placeholder, superClass);\n\n    function Placeholder() {\n      return Placeholder.__super__.constructor.apply(this, arguments);\n    }\n\n    Placeholder.names = [':placeholder-shown', '::placeholder'];\n\n    Placeholder.prototype.possible = function() {\n      return Placeholder.__super__.possible.apply(this, arguments).concat('-moz- old');\n    };\n\n    Placeholder.prototype.prefixed = function(prefix) {\n      if ('-webkit-' === prefix) {\n        return '::-webkit-input-placeholder';\n      } else if ('-ms-' === prefix) {\n        return ':-ms-input-placeholder';\n      } else if ('-moz- old' === prefix) {\n        return ':-moz-placeholder';\n      } else {\n        return \"::\" + prefix + \"placeholder\";\n      }\n    };\n\n    return Placeholder;\n\n  })(Selector);\n\n  module.exports = Placeholder;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/placeholder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/hacks/placeholder.js":"(function() {\n  var Placeholder, Selector,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Selector = require('../selector');\n\n  Placeholder = (function(superClass) {\n    extend(Placeholder, superClass);\n\n    function Placeholder() {\n      return Placeholder.__super__.constructor.apply(this, arguments);\n    }\n\n    Placeholder.names = [':placeholder-shown', '::placeholder'];\n\n    Placeholder.prototype.possible = function() {\n      return Placeholder.__super__.possible.apply(this, arguments).concat('-moz- old');\n    };\n\n    Placeholder.prototype.prefixed = function(prefix) {\n      if ('-webkit-' === prefix) {\n        return '::-webkit-input-placeholder';\n      } else if ('-ms-' === prefix) {\n        return ':-ms-input-placeholder';\n      } else if ('-moz- old' === prefix) {\n        return ':-moz-placeholder';\n      } else {\n        return \"::\" + prefix + \"placeholder\";\n      }\n    };\n\n    return Placeholder;\n\n  })(Selector);\n\n  module.exports = Placeholder;\n\n}).call(this);\n"},"lineCount":40}},"hash":"94d39164d12faebf929ee3db75f4d892","cacheData":{"env":{}}}