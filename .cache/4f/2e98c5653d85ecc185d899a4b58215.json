{"id":"../node_modules/autoprefixer/lib/hacks/filter-value.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"../old-value","loc":{"line":6,"column":21},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/filter-value.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/old-value.js"},{"name":"../value","loc":{"line":8,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/filter-value.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/value.js"},{"name":"../utils","loc":{"line":10,"column":18},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/hacks/filter-value.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/utils.js"}],"generated":{"js":"(function() {\n  var FilterValue, OldFilterValue, OldValue, Value, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  utils = require('../utils');\n\n  OldFilterValue = (function(superClass) {\n    extend(OldFilterValue, superClass);\n\n    function OldFilterValue() {\n      return OldFilterValue.__super__.constructor.apply(this, arguments);\n    }\n\n    OldFilterValue.prototype.clean = function(decl) {\n      return decl.value = utils.editList(decl.value, (function(_this) {\n        return function(props) {\n          if (props.every(function(i) {\n            return i.indexOf(_this.unprefixed) !== 0;\n          })) {\n            return props;\n          }\n          return props.filter(function(i) {\n            return i.indexOf(_this.prefixed) === -1;\n          });\n        };\n      })(this));\n    };\n\n    return OldFilterValue;\n\n  })(OldValue);\n\n  FilterValue = (function(superClass) {\n    extend(FilterValue, superClass);\n\n    FilterValue.names = ['filter', 'filter-function'];\n\n    function FilterValue(name, prefixes) {\n      FilterValue.__super__.constructor.apply(this, arguments);\n      if (name === 'filter-function') {\n        this.name = 'filter';\n      }\n    }\n\n    FilterValue.prototype.replace = function(value, prefix) {\n      if (prefix === '-webkit-' && value.indexOf('filter(') === -1) {\n        if (value.indexOf('-webkit-filter') === -1) {\n          return FilterValue.__super__.replace.apply(this, arguments) + ', ' + value;\n        } else {\n          return value;\n        }\n      } else {\n        return FilterValue.__super__.replace.apply(this, arguments);\n      }\n    };\n\n    FilterValue.prototype.old = function(prefix) {\n      return new OldFilterValue(this.name, prefix + this.name);\n    };\n\n    return FilterValue;\n\n  })(Value);\n\n  module.exports = FilterValue;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/autoprefixer/lib/hacks/filter-value.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/hacks/filter-value.js":"(function() {\n  var FilterValue, OldFilterValue, OldValue, Value, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  utils = require('../utils');\n\n  OldFilterValue = (function(superClass) {\n    extend(OldFilterValue, superClass);\n\n    function OldFilterValue() {\n      return OldFilterValue.__super__.constructor.apply(this, arguments);\n    }\n\n    OldFilterValue.prototype.clean = function(decl) {\n      return decl.value = utils.editList(decl.value, (function(_this) {\n        return function(props) {\n          if (props.every(function(i) {\n            return i.indexOf(_this.unprefixed) !== 0;\n          })) {\n            return props;\n          }\n          return props.filter(function(i) {\n            return i.indexOf(_this.prefixed) === -1;\n          });\n        };\n      })(this));\n    };\n\n    return OldFilterValue;\n\n  })(OldValue);\n\n  FilterValue = (function(superClass) {\n    extend(FilterValue, superClass);\n\n    FilterValue.names = ['filter', 'filter-function'];\n\n    function FilterValue(name, prefixes) {\n      FilterValue.__super__.constructor.apply(this, arguments);\n      if (name === 'filter-function') {\n        this.name = 'filter';\n      }\n    }\n\n    FilterValue.prototype.replace = function(value, prefix) {\n      if (prefix === '-webkit-' && value.indexOf('filter(') === -1) {\n        if (value.indexOf('-webkit-filter') === -1) {\n          return FilterValue.__super__.replace.apply(this, arguments) + ', ' + value;\n        } else {\n          return value;\n        }\n      } else {\n        return FilterValue.__super__.replace.apply(this, arguments);\n      }\n    };\n\n    FilterValue.prototype.old = function(prefix) {\n      return new OldFilterValue(this.name, prefix + this.name);\n    };\n\n    return FilterValue;\n\n  })(Value);\n\n  module.exports = FilterValue;\n\n}).call(this);\n"},"lineCount":73}},"hash":"c6df32e9eef7e89b2cf299952c4e6498","cacheData":{"env":{}}}