{"id":"../node_modules/autoprefixer/lib/transition.js","dependencies":[{"name":"/Users/carloberni/Documents/portfolio/Portfolio/package.json","includedInParent":true,"mtime":1547198646726},{"name":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/package.json","includedInParent":true,"mtime":1547031337632},{"name":"postcss-value-parser","loc":{"line":4,"column":19},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/transition.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/postcss-value-parser/lib/index.js"},{"name":"postcss/lib/vendor","loc":{"line":6,"column":19},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/transition.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/node_modules/postcss/lib/vendor.js"},{"name":"postcss/lib/list","loc":{"line":8,"column":17},"parent":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/lib/transition.js","resolved":"/Users/carloberni/Documents/portfolio/Portfolio/node_modules/autoprefixer/node_modules/postcss/lib/list.js"}],"generated":{"js":"(function() {\n  var Transition, list, parser, vendor;\n\n  parser = require('postcss-value-parser');\n\n  vendor = require('postcss/lib/vendor');\n\n  list = require('postcss/lib/list');\n\n  Transition = (function() {\n    function Transition(prefixes) {\n      this.prefixes = prefixes;\n    }\n\n    Transition.prototype.props = ['transition', 'transition-property'];\n\n    Transition.prototype.add = function(decl, result) {\n      var added, declPrefixes, j, k, l, len, len1, len2, names, operaClean, param, params, prefix, prefixValue, prefixed, prefixer, prop, ref, ref1, value, webkitClean;\n      declPrefixes = ((ref = this.prefixes.add[decl.prop]) != null ? ref.prefixes : void 0) || [];\n      params = this.parse(decl.value);\n      names = params.map((function(_this) {\n        return function(i) {\n          return _this.findProp(i);\n        };\n      })(this));\n      added = [];\n      if (names.some(function(i) {\n        return i[0] === '-';\n      })) {\n        return;\n      }\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        prop = this.findProp(param);\n        if (prop[0] === '-') {\n          continue;\n        }\n        prefixer = this.prefixes.add[prop];\n        if (!(prefixer != null ? prefixer.prefixes : void 0)) {\n          continue;\n        }\n        ref1 = prefixer.prefixes;\n        for (k = 0, len1 = ref1.length; k < len1; k++) {\n          prefix = ref1[k];\n          prefixed = this.prefixes.prefixed(prop, prefix);\n          if (prefixed !== '-ms-transform' && names.indexOf(prefixed) === -1) {\n            if (!this.disabled(prop, prefix)) {\n              added.push(this.clone(prop, prefixed, param));\n            }\n          }\n        }\n      }\n      params = params.concat(added);\n      value = this.stringify(params);\n      webkitClean = this.stringify(this.cleanFromUnprefixed(params, '-webkit-'));\n      if (declPrefixes.indexOf('-webkit-') !== -1) {\n        this.cloneBefore(decl, '-webkit-' + decl.prop, webkitClean);\n      }\n      this.cloneBefore(decl, decl.prop, webkitClean);\n      if (declPrefixes.indexOf('-o-') !== -1) {\n        operaClean = this.stringify(this.cleanFromUnprefixed(params, '-o-'));\n        this.cloneBefore(decl, '-o-' + decl.prop, operaClean);\n      }\n      for (l = 0, len2 = declPrefixes.length; l < len2; l++) {\n        prefix = declPrefixes[l];\n        if (prefix !== '-webkit-' && prefix !== '-o-') {\n          prefixValue = this.stringify(this.cleanOtherPrefixes(params, prefix));\n          this.cloneBefore(decl, prefix + decl.prop, prefixValue);\n        }\n      }\n      if (value !== decl.value && !this.already(decl, decl.prop, value)) {\n        this.checkForWarning(result, decl);\n        decl.cloneBefore();\n        return decl.value = value;\n      }\n    };\n\n    Transition.prototype.findProp = function(param) {\n      var i, j, len, prop, token;\n      prop = param[0].value;\n      if (/^\\d/.test(prop)) {\n        for (i = j = 0, len = param.length; j < len; i = ++j) {\n          token = param[i];\n          if (i !== 0 && token.type === 'word') {\n            return token.value;\n          }\n        }\n      }\n      return prop;\n    };\n\n    Transition.prototype.already = function(decl, prop, value) {\n      return decl.parent.some(function(i) {\n        return i.prop === prop && i.value === value;\n      });\n    };\n\n    Transition.prototype.cloneBefore = function(decl, prop, value) {\n      if (!this.already(decl, prop, value)) {\n        return decl.cloneBefore({\n          prop: prop,\n          value: value\n        });\n      }\n    };\n\n    Transition.prototype.checkForWarning = function(result, decl) {\n      if (decl.prop === 'transition-property') {\n        return decl.parent.each(function(i) {\n          if (i.type !== 'decl') {\n            return;\n          }\n          if (i.prop.indexOf('transition-') !== 0) {\n            return;\n          }\n          if (i.prop === 'transition-property') {\n            return;\n          }\n          if (list.comma(i.value).length > 1) {\n            decl.warn(result, 'Replace transition-property to transition, ' + 'because Autoprefixer could not support ' + 'any cases of transition-property ' + 'and other transition-*');\n          }\n          return false;\n        });\n      }\n    };\n\n    Transition.prototype.remove = function(decl) {\n      var double, params, smaller, value;\n      params = this.parse(decl.value);\n      params = params.filter((function(_this) {\n        return function(i) {\n          var ref;\n          return !((ref = _this.prefixes.remove[_this.findProp(i)]) != null ? ref.remove : void 0);\n        };\n      })(this));\n      value = this.stringify(params);\n      if (decl.value === value) {\n        return;\n      }\n      if (params.length === 0) {\n        decl.remove();\n        return;\n      }\n      double = decl.parent.some(function(i) {\n        return i.prop === decl.prop && i.value === value;\n      });\n      smaller = decl.parent.some(function(i) {\n        return i !== decl && i.prop === decl.prop && i.value.length > value.length;\n      });\n      if (double || smaller) {\n        return decl.remove();\n      } else {\n        return decl.value = value;\n      }\n    };\n\n    Transition.prototype.parse = function(value) {\n      var ast, j, len, node, param, ref, result;\n      ast = parser(value);\n      result = [];\n      param = [];\n      ref = ast.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        node = ref[j];\n        param.push(node);\n        if (node.type === 'div' && node.value === ',') {\n          result.push(param);\n          param = [];\n        }\n      }\n      result.push(param);\n      return result.filter(function(i) {\n        return i.length > 0;\n      });\n    };\n\n    Transition.prototype.stringify = function(params) {\n      var j, len, nodes, param;\n      if (params.length === 0) {\n        return '';\n      }\n      nodes = [];\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        if (param[param.length - 1].type !== 'div') {\n          param.push(this.div(params));\n        }\n        nodes = nodes.concat(param);\n      }\n      if (nodes[0].type === 'div') {\n        nodes = nodes.slice(1);\n      }\n      if (nodes[nodes.length - 1].type === 'div') {\n        nodes = nodes.slice(0, -1);\n      }\n      return parser.stringify({\n        nodes: nodes\n      });\n    };\n\n    Transition.prototype.clone = function(origin, name, param) {\n      var changed, i, j, len, result;\n      result = [];\n      changed = false;\n      for (j = 0, len = param.length; j < len; j++) {\n        i = param[j];\n        if (!changed && i.type === 'word' && i.value === origin) {\n          result.push({\n            type: 'word',\n            value: name\n          });\n          changed = true;\n        } else {\n          result.push(i);\n        }\n      }\n      return result;\n    };\n\n    Transition.prototype.div = function(params) {\n      var j, k, len, len1, node, param;\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        for (k = 0, len1 = param.length; k < len1; k++) {\n          node = param[k];\n          if (node.type === 'div' && node.value === ',') {\n            return node;\n          }\n        }\n      }\n      return {\n        type: 'div',\n        value: ',',\n        after: ' '\n      };\n    };\n\n    Transition.prototype.cleanOtherPrefixes = function(params, prefix) {\n      return params.filter((function(_this) {\n        return function(param) {\n          var current;\n          current = vendor.prefix(_this.findProp(param));\n          return current === '' || current === prefix;\n        };\n      })(this));\n    };\n\n    Transition.prototype.cleanFromUnprefixed = function(params, prefix) {\n      var j, len, p, param, prop, remove, result;\n      result = [];\n      remove = params.map((function(_this) {\n        return function(i) {\n          return _this.findProp(i);\n        };\n      })(this)).filter(function(i) {\n        return i.slice(0, prefix.length) === prefix;\n      }).map((function(_this) {\n        return function(i) {\n          return _this.prefixes.unprefixed(i);\n        };\n      })(this));\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        prop = this.findProp(param);\n        p = vendor.prefix(prop);\n        if (remove.indexOf(prop) === -1 && (p === prefix || p === '')) {\n          result.push(param);\n        }\n      }\n      return result;\n    };\n\n    Transition.prototype.disabled = function(prop, prefix) {\n      var other;\n      other = ['order', 'justify-content', 'align-self', 'align-content'];\n      if (prop.indexOf('flex') !== -1 || other.indexOf(prop) !== -1) {\n        if (this.prefixes.options.flexbox === false) {\n          return true;\n        } else if (this.prefixes.options.flexbox === 'no-2009') {\n          return prefix.indexOf('2009') !== -1;\n        }\n      }\n    };\n\n    return Transition;\n\n  })();\n\n  module.exports = Transition;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/autoprefixer/lib/transition.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}}],"sources":{"../node_modules/autoprefixer/lib/transition.js":"(function() {\n  var Transition, list, parser, vendor;\n\n  parser = require('postcss-value-parser');\n\n  vendor = require('postcss/lib/vendor');\n\n  list = require('postcss/lib/list');\n\n  Transition = (function() {\n    function Transition(prefixes) {\n      this.prefixes = prefixes;\n    }\n\n    Transition.prototype.props = ['transition', 'transition-property'];\n\n    Transition.prototype.add = function(decl, result) {\n      var added, declPrefixes, j, k, l, len, len1, len2, names, operaClean, param, params, prefix, prefixValue, prefixed, prefixer, prop, ref, ref1, value, webkitClean;\n      declPrefixes = ((ref = this.prefixes.add[decl.prop]) != null ? ref.prefixes : void 0) || [];\n      params = this.parse(decl.value);\n      names = params.map((function(_this) {\n        return function(i) {\n          return _this.findProp(i);\n        };\n      })(this));\n      added = [];\n      if (names.some(function(i) {\n        return i[0] === '-';\n      })) {\n        return;\n      }\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        prop = this.findProp(param);\n        if (prop[0] === '-') {\n          continue;\n        }\n        prefixer = this.prefixes.add[prop];\n        if (!(prefixer != null ? prefixer.prefixes : void 0)) {\n          continue;\n        }\n        ref1 = prefixer.prefixes;\n        for (k = 0, len1 = ref1.length; k < len1; k++) {\n          prefix = ref1[k];\n          prefixed = this.prefixes.prefixed(prop, prefix);\n          if (prefixed !== '-ms-transform' && names.indexOf(prefixed) === -1) {\n            if (!this.disabled(prop, prefix)) {\n              added.push(this.clone(prop, prefixed, param));\n            }\n          }\n        }\n      }\n      params = params.concat(added);\n      value = this.stringify(params);\n      webkitClean = this.stringify(this.cleanFromUnprefixed(params, '-webkit-'));\n      if (declPrefixes.indexOf('-webkit-') !== -1) {\n        this.cloneBefore(decl, '-webkit-' + decl.prop, webkitClean);\n      }\n      this.cloneBefore(decl, decl.prop, webkitClean);\n      if (declPrefixes.indexOf('-o-') !== -1) {\n        operaClean = this.stringify(this.cleanFromUnprefixed(params, '-o-'));\n        this.cloneBefore(decl, '-o-' + decl.prop, operaClean);\n      }\n      for (l = 0, len2 = declPrefixes.length; l < len2; l++) {\n        prefix = declPrefixes[l];\n        if (prefix !== '-webkit-' && prefix !== '-o-') {\n          prefixValue = this.stringify(this.cleanOtherPrefixes(params, prefix));\n          this.cloneBefore(decl, prefix + decl.prop, prefixValue);\n        }\n      }\n      if (value !== decl.value && !this.already(decl, decl.prop, value)) {\n        this.checkForWarning(result, decl);\n        decl.cloneBefore();\n        return decl.value = value;\n      }\n    };\n\n    Transition.prototype.findProp = function(param) {\n      var i, j, len, prop, token;\n      prop = param[0].value;\n      if (/^\\d/.test(prop)) {\n        for (i = j = 0, len = param.length; j < len; i = ++j) {\n          token = param[i];\n          if (i !== 0 && token.type === 'word') {\n            return token.value;\n          }\n        }\n      }\n      return prop;\n    };\n\n    Transition.prototype.already = function(decl, prop, value) {\n      return decl.parent.some(function(i) {\n        return i.prop === prop && i.value === value;\n      });\n    };\n\n    Transition.prototype.cloneBefore = function(decl, prop, value) {\n      if (!this.already(decl, prop, value)) {\n        return decl.cloneBefore({\n          prop: prop,\n          value: value\n        });\n      }\n    };\n\n    Transition.prototype.checkForWarning = function(result, decl) {\n      if (decl.prop === 'transition-property') {\n        return decl.parent.each(function(i) {\n          if (i.type !== 'decl') {\n            return;\n          }\n          if (i.prop.indexOf('transition-') !== 0) {\n            return;\n          }\n          if (i.prop === 'transition-property') {\n            return;\n          }\n          if (list.comma(i.value).length > 1) {\n            decl.warn(result, 'Replace transition-property to transition, ' + 'because Autoprefixer could not support ' + 'any cases of transition-property ' + 'and other transition-*');\n          }\n          return false;\n        });\n      }\n    };\n\n    Transition.prototype.remove = function(decl) {\n      var double, params, smaller, value;\n      params = this.parse(decl.value);\n      params = params.filter((function(_this) {\n        return function(i) {\n          var ref;\n          return !((ref = _this.prefixes.remove[_this.findProp(i)]) != null ? ref.remove : void 0);\n        };\n      })(this));\n      value = this.stringify(params);\n      if (decl.value === value) {\n        return;\n      }\n      if (params.length === 0) {\n        decl.remove();\n        return;\n      }\n      double = decl.parent.some(function(i) {\n        return i.prop === decl.prop && i.value === value;\n      });\n      smaller = decl.parent.some(function(i) {\n        return i !== decl && i.prop === decl.prop && i.value.length > value.length;\n      });\n      if (double || smaller) {\n        return decl.remove();\n      } else {\n        return decl.value = value;\n      }\n    };\n\n    Transition.prototype.parse = function(value) {\n      var ast, j, len, node, param, ref, result;\n      ast = parser(value);\n      result = [];\n      param = [];\n      ref = ast.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        node = ref[j];\n        param.push(node);\n        if (node.type === 'div' && node.value === ',') {\n          result.push(param);\n          param = [];\n        }\n      }\n      result.push(param);\n      return result.filter(function(i) {\n        return i.length > 0;\n      });\n    };\n\n    Transition.prototype.stringify = function(params) {\n      var j, len, nodes, param;\n      if (params.length === 0) {\n        return '';\n      }\n      nodes = [];\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        if (param[param.length - 1].type !== 'div') {\n          param.push(this.div(params));\n        }\n        nodes = nodes.concat(param);\n      }\n      if (nodes[0].type === 'div') {\n        nodes = nodes.slice(1);\n      }\n      if (nodes[nodes.length - 1].type === 'div') {\n        nodes = nodes.slice(0, -1);\n      }\n      return parser.stringify({\n        nodes: nodes\n      });\n    };\n\n    Transition.prototype.clone = function(origin, name, param) {\n      var changed, i, j, len, result;\n      result = [];\n      changed = false;\n      for (j = 0, len = param.length; j < len; j++) {\n        i = param[j];\n        if (!changed && i.type === 'word' && i.value === origin) {\n          result.push({\n            type: 'word',\n            value: name\n          });\n          changed = true;\n        } else {\n          result.push(i);\n        }\n      }\n      return result;\n    };\n\n    Transition.prototype.div = function(params) {\n      var j, k, len, len1, node, param;\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        for (k = 0, len1 = param.length; k < len1; k++) {\n          node = param[k];\n          if (node.type === 'div' && node.value === ',') {\n            return node;\n          }\n        }\n      }\n      return {\n        type: 'div',\n        value: ',',\n        after: ' '\n      };\n    };\n\n    Transition.prototype.cleanOtherPrefixes = function(params, prefix) {\n      return params.filter((function(_this) {\n        return function(param) {\n          var current;\n          current = vendor.prefix(_this.findProp(param));\n          return current === '' || current === prefix;\n        };\n      })(this));\n    };\n\n    Transition.prototype.cleanFromUnprefixed = function(params, prefix) {\n      var j, len, p, param, prop, remove, result;\n      result = [];\n      remove = params.map((function(_this) {\n        return function(i) {\n          return _this.findProp(i);\n        };\n      })(this)).filter(function(i) {\n        return i.slice(0, prefix.length) === prefix;\n      }).map((function(_this) {\n        return function(i) {\n          return _this.prefixes.unprefixed(i);\n        };\n      })(this));\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        prop = this.findProp(param);\n        p = vendor.prefix(prop);\n        if (remove.indexOf(prop) === -1 && (p === prefix || p === '')) {\n          result.push(param);\n        }\n      }\n      return result;\n    };\n\n    Transition.prototype.disabled = function(prop, prefix) {\n      var other;\n      other = ['order', 'justify-content', 'align-self', 'align-content'];\n      if (prop.indexOf('flex') !== -1 || other.indexOf(prop) !== -1) {\n        if (this.prefixes.options.flexbox === false) {\n          return true;\n        } else if (this.prefixes.options.flexbox === 'no-2009') {\n          return prefix.indexOf('2009') !== -1;\n        }\n      }\n    };\n\n    return Transition;\n\n  })();\n\n  module.exports = Transition;\n\n}).call(this);\n"},"lineCount":292}},"hash":"ac8856bc63e8ae886bd0f961e7a7e50d","cacheData":{"env":{}}}